''
''
'' dislin -- Scientific data plotting library
''			 (header translated with help of SWIG FB wrapper)
''
'' NOTICE: This file is part of the FreeBASIC Compiler package and can't
''         be included in other distributions without authorization.
''
''
#ifndef __dislin_bi__
#define __dislin_bi__

#inclib "dismgc"

#ifdef DISLIN_DBL
# define DISLIN_TYPE double
#else
# define DISLIN_TYPE single
#endif

declare sub abs3pt cdecl alias "abs3pt" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE, byval xp as DISLIN_TYPE ptr, byval yp as DISLIN_TYPE ptr)
declare sub addlab cdecl alias "addlab" (byval cstr as zstring ptr, byval v as DISLIN_TYPE, byval itic as integer, byval cax as zstring ptr)
declare sub angle cdecl alias "angle" (byval ngrad as integer)
declare sub arcell cdecl alias "arcell" (byval nx as integer, byval ny as integer, byval na as integer, byval nb as integer, byval a as DISLIN_TYPE, byval b as DISLIN_TYPE, byval t as DISLIN_TYPE)
declare sub areaf cdecl alias "areaf" (byval nxray as integer ptr, byval nyray as integer ptr, byval n as integer)
declare sub autres cdecl alias "autres" (byval ixdim as integer, byval iydim as integer)
declare sub ax2grf cdecl alias "ax2grf" ()
declare sub ax3len cdecl alias "ax3len" (byval nxl as integer, byval nyl as integer, byval nzl as integer)
declare sub axclrs cdecl alias "axclrs" (byval nclr as integer, byval copt as zstring ptr, byval cax as zstring ptr)
declare sub axends cdecl alias "axends" (byval cstr as zstring ptr, byval cax as zstring ptr)
declare sub axgit cdecl alias "axgit" ()
declare sub axis3d cdecl alias "axis3d" (byval x3 as DISLIN_TYPE, byval y3 as DISLIN_TYPE, byval z3 as DISLIN_TYPE)
declare sub axsbgd cdecl alias "axsbgd" (byval nclr as integer)
declare sub axslen cdecl alias "axslen" (byval nxl as integer, byval nyl as integer)
declare sub axsorg cdecl alias "axsorg" (byval nxa as integer, byval nya as integer)
declare sub axspos cdecl alias "axspos" (byval nxa as integer, byval nya as integer)
declare sub axsscl cdecl alias "axsscl" (byval cscl as zstring ptr, byval cax as zstring ptr)
declare sub axstyp cdecl alias "axstyp" (byval copt as zstring ptr)
declare sub barbor cdecl alias "barbor" (byval iclr as integer)
declare sub barclr cdecl alias "barclr" (byval ic1 as integer, byval ic2 as integer, byval ic3 as integer)
declare sub bargrp cdecl alias "bargrp" (byval ngrp as integer, byval gap as DISLIN_TYPE)
declare sub barmod cdecl alias "barmod" (byval cmod as zstring ptr, byval copt as zstring ptr)
declare sub baropt cdecl alias "baropt" (byval xf as DISLIN_TYPE, byval a as DISLIN_TYPE)
declare sub barpos cdecl alias "barpos" (byval copt as zstring ptr)
declare sub bars cdecl alias "bars" (byval xray as DISLIN_TYPE ptr, byval y1ray as DISLIN_TYPE ptr, byval y2ray as DISLIN_TYPE ptr, byval n as integer)
declare sub bars3d cdecl alias "bars3d" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval z1ray as DISLIN_TYPE ptr, byval z2ray as DISLIN_TYPE ptr, byval xwray as DISLIN_TYPE ptr, byval ywray as DISLIN_TYPE ptr, byval icray as integer ptr, byval n as integer)
declare sub bartyp cdecl alias "bartyp" (byval ctyp as zstring ptr)
declare sub barwth cdecl alias "barwth" (byval factor as DISLIN_TYPE)
declare sub basalf cdecl alias "basalf" (byval calph as zstring ptr)
declare sub basdat cdecl alias "basdat" (byval id as integer, byval im as integer, byval iy as integer)
declare sub bezier cdecl alias "bezier" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval nray as integer, byval x as DISLIN_TYPE ptr, byval y as DISLIN_TYPE ptr, byval n as integer)
declare function bitsi2 cdecl alias "bitsi2" (byval nbits as integer, byval mher as short, byval iher as integer, byval mhin as short, byval ihin as integer) as short
declare function bitsi4 cdecl alias "bitsi4" (byval nbits as integer, byval mher as integer, byval iher as integer, byval mhin as integer, byval ihin as integer) as integer
declare sub bmpfnt cdecl alias "bmpfnt" (byval copt as zstring ptr)
declare sub box2d cdecl alias "box2d" ()
declare sub box3d cdecl alias "box3d" ()
declare sub center cdecl alias "center" ()
declare sub cgmbgd cdecl alias "cgmbgd" (byval xr as DISLIN_TYPE, byval xg as DISLIN_TYPE, byval xb as DISLIN_TYPE)
declare sub cgmpic cdecl alias "cgmpic" (byval cstr as zstring ptr)
declare sub cgmver cdecl alias "cgmver" (byval nclr as integer)
declare sub chaang cdecl alias "chaang" (byval angle as DISLIN_TYPE)
declare sub chacod cdecl alias "chacod" (byval copt as zstring ptr)
declare sub chaspc cdecl alias "chaspc" (byval xspc as DISLIN_TYPE)
declare sub chawth cdecl alias "chawth" (byval xwth as DISLIN_TYPE)
declare sub chnatt cdecl alias "chnatt" ()
declare sub chncrv cdecl alias "chncrv" (byval copt as zstring ptr)
declare sub chndot cdecl alias "chndot" ()
declare sub chndsh cdecl alias "chndsh" ()
declare sub chnbar cdecl alias "chnbar" (byval copt as zstring ptr)
declare sub chnpie cdecl alias "chnpie" (byval copt as zstring ptr)
declare sub circ3p cdecl alias "circ3p" (byval x1 as DISLIN_TYPE, byval y1 as DISLIN_TYPE, byval x2 as DISLIN_TYPE, byval y2 as DISLIN_TYPE, byval x3 as DISLIN_TYPE, byval y3 as DISLIN_TYPE, byval xm as DISLIN_TYPE ptr, byval ym as DISLIN_TYPE ptr, byval r as DISLIN_TYPE ptr)
declare sub circle_ cdecl alias "circle" (byval nx as integer, byval ny as integer, byval nr as integer)
declare sub circsp cdecl alias "circsp" (byval nspc as integer)
declare sub clip3d cdecl alias "clip3d" (byval ctyp as zstring ptr)
declare function closfl cdecl alias "closfl" (byval nu as integer) as integer
declare sub clpbor cdecl alias "clpbor" (byval copt as zstring ptr)
declare sub clpmod cdecl alias "clpmod" (byval copt as zstring ptr)
declare sub clpwin cdecl alias "clpwin" (byval nx as integer, byval ny as integer, byval nw as integer, byval nh as integer)
declare sub clrcyc cdecl alias "clrcyc" (byval index as integer, byval iclr as integer)
declare sub clrmod cdecl alias "clrmod" (byval cmode as zstring ptr)
declare sub clswin cdecl alias "clswin" (byval id as integer)
declare sub color_ cdecl alias "color" (byval col as zstring ptr)
declare sub colran cdecl alias "colran" (byval nca as integer, byval nce as integer)
declare sub colray cdecl alias "colray" (byval zray as DISLIN_TYPE ptr, byval nray as integer ptr, byval n as integer)
declare sub complx cdecl alias "complx" ()
declare sub conclr cdecl alias "conclr" (byval nray as integer ptr, byval n as integer)
declare sub concrv cdecl alias "concrv" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval n as integer, byval zlev as DISLIN_TYPE)
declare sub confll cdecl alias "confll" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval zray as DISLIN_TYPE ptr, byval n as integer, byval i1ray as integer ptr, byval i2ray as integer ptr, byval i3ray as integer ptr, byval ntri as integer, byval zlev as DISLIN_TYPE ptr, byval nlev as integer)
declare sub congap cdecl alias "congap" (byval xfac as DISLIN_TYPE)
declare sub conlab cdecl alias "conlab" (byval clab as zstring ptr)
declare sub conmat cdecl alias "conmat" (byval zmat as DISLIN_TYPE ptr, byval n as integer, byval m as integer, byval zlev as DISLIN_TYPE)
declare sub conmod cdecl alias "conmod" (byval xfac as DISLIN_TYPE, byval xquot as DISLIN_TYPE)
declare sub conn3d cdecl alias "conn3d" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE)
declare sub connpt cdecl alias "connpt" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE)
declare sub conpts cdecl alias "conpts" (byval xray as DISLIN_TYPE ptr, byval n as integer, byval yray as DISLIN_TYPE ptr, byval m as integer, byval zmat as DISLIN_TYPE ptr, byval zlev as DISLIN_TYPE, byval xpts as DISLIN_TYPE ptr, byval ypts as DISLIN_TYPE ptr, byval maxpts as integer, byval nray as integer ptr, byval maxray as integer, byval nlins as integer ptr)
declare sub conshd cdecl alias "conshd" (byval xray as DISLIN_TYPE ptr, byval n as integer, byval yray as DISLIN_TYPE ptr, byval m as integer, byval zmat as DISLIN_TYPE ptr, byval zlev as DISLIN_TYPE ptr, byval nlev as integer)
declare sub contri cdecl alias "contri" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval zray as DISLIN_TYPE ptr, byval n as integer, byval i1ray as integer ptr, byval i2ray as integer ptr, byval i3ray as integer ptr, byval ntri as integer, byval zlev as DISLIN_TYPE)
declare sub contur cdecl alias "contur" (byval xray as DISLIN_TYPE ptr, byval n as integer, byval yray as DISLIN_TYPE ptr, byval m as integer, byval zmat as DISLIN_TYPE ptr, byval zlev as DISLIN_TYPE)
declare sub cross cdecl alias "cross" ()
declare sub crvmat cdecl alias "crvmat" (byval zmat as DISLIN_TYPE ptr, byval n as integer, byval m as integer, byval ixpts as integer, byval iypts as integer)
declare sub crvtri cdecl alias "crvtri" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval zray as DISLIN_TYPE ptr, byval n as integer, byval i1ray as integer ptr, byval i2ray as integer ptr, byval i3ray as integer ptr, byval ntri as integer)
declare sub csrmod cdecl alias "csrmod" (byval cmod as zstring ptr, byval ckey as zstring ptr)
declare function csrpos cdecl alias "csrpos" (byval ix as integer ptr, byval iy as integer ptr) as integer
declare sub csrpt1 cdecl alias "csrpt1" (byval ix as integer ptr, byval iy as integer ptr)
declare sub csrpts cdecl alias "csrpts" (byval ix as integer ptr, byval iy as integer ptr, byval nmax as integer, byval n as integer ptr, byval iret as integer ptr)
declare sub csrmov cdecl alias "csrmov" (byval ix as integer ptr, byval iy as integer ptr, byval nmax as integer, byval n as integer ptr, byval iret as integer ptr)
declare sub csrtyp cdecl alias "csrtyp" (byval copt as zstring ptr)
declare sub csruni cdecl alias "csruni" (byval copt as zstring ptr)
declare sub curv3d cdecl alias "curv3d" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval zray as DISLIN_TYPE ptr, byval n as integer)
declare sub curve cdecl alias "curve" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval n as integer)
declare sub curve3 cdecl alias "curve3" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval zray as DISLIN_TYPE ptr, byval n as integer)
declare sub curvmp cdecl alias "curvmp" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval n as integer)
declare sub curvx3 cdecl alias "curvx3" (byval xray as DISLIN_TYPE ptr, byval y as DISLIN_TYPE, byval zray as DISLIN_TYPE ptr, byval n as integer)
declare sub curvy3 cdecl alias "curvy3" (byval x as DISLIN_TYPE, byval yray as DISLIN_TYPE ptr, byval zray as DISLIN_TYPE ptr, byval n as integer)
declare sub dash cdecl alias "dash" ()
declare sub dashl cdecl alias "dashl" ()
declare sub dashm cdecl alias "dashm" ()
declare sub dattim cdecl alias "dattim" (byval cdate as zstring ptr, byval ctime as zstring ptr)
declare sub digits cdecl alias "digits" (byval ndig as integer, byval cax as zstring ptr)
declare sub disalf cdecl alias "disalf" ()
declare sub disfin cdecl alias "disfin" ()
declare sub disini cdecl alias "disini" ()
declare sub dot cdecl alias "dot" ()
declare sub dotl cdecl alias "dotl" ()
declare sub duplx cdecl alias "duplx" ()
declare function dwgbut cdecl alias "dwgbut" (byval cstr as zstring ptr, byval ival as integer) as integer
declare function dwgfil cdecl alias "dwgfil" (byval clab as zstring ptr, byval cstr as zstring ptr, byval cmask as zstring ptr) as zstring ptr
declare function dwglis cdecl alias "dwglis" (byval clab as zstring ptr, byval clis as zstring ptr, byval ilis as integer) as integer
declare sub dwgmsg cdecl alias "dwgmsg" (byval cstr as zstring ptr)
declare function dwgtxt cdecl alias "dwgtxt" (byval clab as zstring ptr, byval cstr as zstring ptr) as zstring ptr
declare sub ellips cdecl alias "ellips" (byval nx as integer, byval ny as integer, byval na as integer, byval nb as integer)
declare sub endgrf cdecl alias "endgrf" ()
declare sub erase_ cdecl alias "erase" ()
declare sub errbar cdecl alias "errbar" (byval x as DISLIN_TYPE ptr, byval y as DISLIN_TYPE ptr, byval err1 as DISLIN_TYPE ptr, byval err2 as DISLIN_TYPE ptr, byval n as integer)
declare sub errdev cdecl alias "errdev" (byval cdev as zstring ptr)
declare sub errfil cdecl alias "errfil" (byval cfil as zstring ptr)
declare sub errmod cdecl alias "errmod" (byval cstr as zstring ptr, byval copt as zstring ptr)
declare sub eushft cdecl alias "eushft" (byval cnat as zstring ptr, byval cshf as zstring ptr)
declare sub expzlb cdecl alias "expzlb" (byval cstr as zstring ptr)
declare function fcha cdecl alias "fcha" (byval x as DISLIN_TYPE, byval ndig as integer, byval cstr as zstring ptr) as integer
declare sub field_ cdecl alias "field" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval uray as DISLIN_TYPE ptr, byval vray as DISLIN_TYPE ptr, byval n as integer, byval ivec as integer)
declare sub filbox cdecl alias "filbox" (byval nx as integer, byval ny as integer, byval nw as integer, byval nh as integer)
declare sub filclr cdecl alias "filclr" (byval copt as zstring ptr)
declare sub filmod cdecl alias "filmod" (byval cmod as zstring ptr)
declare sub fixspc cdecl alias "fixspc" (byval xfac as DISLIN_TYPE)
declare sub flab3d cdecl alias "flab3d" ()
declare function flen cdecl alias "flen" (byval x as DISLIN_TYPE, byval ndig as integer) as integer
declare sub frame cdecl alias "frame" (byval nfrm as integer)
declare sub frmclr cdecl alias "frmclr" (byval nclr as integer)
declare sub frmess cdecl alias "frmess" (byval nfrm as integer)
declare sub gapcrv cdecl alias "gapcrv" (byval xgap as DISLIN_TYPE)
declare function getalf cdecl alias "getalf" () as zstring ptr
declare function getang cdecl alias "getang" () as integer
declare function getbpp cdecl alias "getbpp" () as integer
declare sub getclp cdecl alias "getclp" (byval nx as integer ptr, byval ny as integer ptr, byval nw as integer ptr, byval nh as integer ptr)
declare function getclr cdecl alias "getclr" () as integer
declare sub getdig cdecl alias "getdig" (byval nxdig as integer ptr, byval nydig as integer ptr, byval nzdig as integer ptr)
declare function getdsp cdecl alias "getdsp" () as zstring ptr
declare function getfil cdecl alias "getfil" () as zstring ptr
declare sub getgrf cdecl alias "getgrf" (byval a as DISLIN_TYPE ptr, byval e as DISLIN_TYPE ptr, byval org as DISLIN_TYPE ptr, byval step as DISLIN_TYPE ptr, byval cax as zstring ptr)
declare function gethgt cdecl alias "gethgt" () as integer
declare function gethnm cdecl alias "gethnm" () as integer
declare sub getind cdecl alias "getind" (byval index as integer, byval xr as DISLIN_TYPE ptr, byval xg as DISLIN_TYPE ptr, byval xb as DISLIN_TYPE ptr)
declare sub getlab cdecl alias "getlab" (byval cx as zstring ptr, byval cy as zstring ptr, byval cz as zstring ptr)
declare sub getlen cdecl alias "getlen" (byval nxl as integer ptr, byval nyl as integer ptr, byval nzl as integer ptr)
declare function getlev cdecl alias "getlev" () as integer
declare function getlin cdecl alias "getlin" () as integer
declare function getlit cdecl alias "getlit" (byval xp as DISLIN_TYPE, byval yp as DISLIN_TYPE, byval zp as DISLIN_TYPE, byval xn as DISLIN_TYPE, byval yn as DISLIN_TYPE, byval zn as DISLIN_TYPE) as integer
declare sub getmat cdecl alias "getmat" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval zray as DISLIN_TYPE ptr, byval n as integer, byval zmat as DISLIN_TYPE ptr, byval nx as integer, byval ny as integer, byval zval as DISLIN_TYPE, byval imat as integer ptr, byval wmat as DISLIN_TYPE ptr)
declare function getmfl cdecl alias "getmfl" () as zstring ptr
declare function getmix cdecl alias "getmix" (byval copt as zstring ptr) as zstring ptr
declare sub getor cdecl alias "getor" (byval nx0 as integer ptr, byval ny0 as integer ptr)
declare sub getpag cdecl alias "getpag" (byval nxpag as integer ptr, byval nypag as integer ptr)
declare function getpat cdecl alias "getpat" () as integer
declare function getplv cdecl alias "getplv" () as integer
declare sub getpos cdecl alias "getpos" (byval nxa as integer ptr, byval nya as integer ptr)
declare sub getran cdecl alias "getran" (byval nca as integer ptr, byval nce as integer ptr)
declare sub getres cdecl alias "getres" (byval npb as integer ptr, byval nph as integer ptr)
declare sub getrgb cdecl alias "getrgb" (byval xr as DISLIN_TYPE ptr, byval xg as DISLIN_TYPE ptr, byval xb as DISLIN_TYPE ptr)
declare sub getscl cdecl alias "getscl" (byval nxscl as integer ptr, byval nyscl as integer ptr, byval nzscl as integer ptr)
declare sub getscr cdecl alias "getscr" (byval nwidth as integer ptr, byval nheight as integer ptr)
declare function getshf cdecl alias "getshf" (byval copt as zstring ptr) as zstring ptr
declare sub getsp1 cdecl alias "getsp1" (byval nxdis as integer ptr, byval nydis as integer ptr, byval nzdis as integer ptr)
declare sub getsp2 cdecl alias "getsp2" (byval nxdis as integer ptr, byval nydis as integer ptr, byval nzdis as integer ptr)
declare sub getsym cdecl alias "getsym" (byval nxsym as integer ptr, byval nysym as integer ptr)
declare sub gettcl cdecl alias "gettcl" (byval nmaj as integer ptr, byval nmin as integer ptr)
declare sub gettic cdecl alias "gettic" (byval nxtic as integer ptr, byval nytic as integer ptr, byval nztic as integer ptr)
declare function gettyp cdecl alias "gettyp" () as integer
declare function getuni cdecl alias "getuni" () as any ptr
declare function getver cdecl alias "getver" () as DISLIN_TYPE
declare sub getvk cdecl alias "getvk" (byval nv as integer ptr, byval nvfx as integer ptr, byval nvfy as integer ptr)
declare function getvlt cdecl alias "getvlt" () as zstring ptr
declare function getwid cdecl alias "getwid" () as integer
declare sub getwin cdecl alias "getwin" (byval ix as integer ptr, byval iy as integer ptr, byval nwidth as integer ptr, byval nheight as integer ptr)
declare function getxid cdecl alias "getxid" (byval copt as zstring ptr) as integer
declare sub gifmod cdecl alias "gifmod" (byval cmod as zstring ptr, byval ckey as zstring ptr)
declare function gmxalf cdecl alias "gmxalf" (byval copt as zstring ptr, byval ca as zstring ptr, byval cb as zstring ptr) as integer
declare sub gothic cdecl alias "gothic" ()
declare sub grace cdecl alias "grace" (byval ngrace as integer)
declare sub graf cdecl alias "graf" (byval xa as DISLIN_TYPE, byval xe as DISLIN_TYPE, byval xorg as DISLIN_TYPE, byval xstp as DISLIN_TYPE, byval ya as DISLIN_TYPE, byval ye as DISLIN_TYPE, byval yorg as DISLIN_TYPE, byval ystp as DISLIN_TYPE)
declare sub graf3 cdecl alias "graf3" (byval xa as DISLIN_TYPE, byval xe as DISLIN_TYPE, byval xorg as DISLIN_TYPE, byval xstp as DISLIN_TYPE, byval ya as DISLIN_TYPE, byval ye as DISLIN_TYPE, byval yorg as DISLIN_TYPE, byval ystp as DISLIN_TYPE, byval za as DISLIN_TYPE, byval ze as DISLIN_TYPE, byval zorg as DISLIN_TYPE, byval zstp as DISLIN_TYPE)
declare sub graf3d cdecl alias "graf3d" (byval xa as DISLIN_TYPE, byval xe as DISLIN_TYPE, byval xorg as DISLIN_TYPE, byval xstp as DISLIN_TYPE, byval ya as DISLIN_TYPE, byval ye as DISLIN_TYPE, byval yorg as DISLIN_TYPE, byval ystp as DISLIN_TYPE, byval za as DISLIN_TYPE, byval ze as DISLIN_TYPE, byval zorg as DISLIN_TYPE, byval zstp as DISLIN_TYPE)
declare sub grafmp cdecl alias "grafmp" (byval xa as DISLIN_TYPE, byval xe as DISLIN_TYPE, byval xorg as DISLIN_TYPE, byval xstp as DISLIN_TYPE, byval ya as DISLIN_TYPE, byval ye as DISLIN_TYPE, byval yorg as DISLIN_TYPE, byval ystp as DISLIN_TYPE)
declare sub grdpol cdecl alias "grdpol" (byval ixgrid as integer, byval iygrid as integer)
declare sub grffin cdecl alias "grffin" ()
declare sub grfini cdecl alias "grfini" (byval x1 as DISLIN_TYPE, byval y1 as DISLIN_TYPE, byval z1 as DISLIN_TYPE, byval x2 as DISLIN_TYPE, byval y2 as DISLIN_TYPE, byval z2 as DISLIN_TYPE, byval x3 as DISLIN_TYPE, byval y3 as DISLIN_TYPE, byval z3 as DISLIN_TYPE)
declare sub grid cdecl alias "grid" (byval ixgrid as integer, byval iygrid as integer)
declare sub grid3d cdecl alias "grid3d" (byval ixgrid as integer, byval iygrid as integer, byval copt as zstring ptr)
declare sub gridmp cdecl alias "gridmp" (byval ixgrid as integer, byval iygrid as integer)
declare function gwgatt cdecl alias "gwgatt" (byval id as integer, byval copt as zstring ptr) as integer
declare function gwgbox cdecl alias "gwgbox" (byval id as integer) as integer
declare function gwgbut cdecl alias "gwgbut" (byval id as integer) as integer
declare sub gwgfil cdecl alias "gwgfil" (byval id as integer, byval cfile as zstring ptr)
declare function gwglis cdecl alias "gwglis" (byval id as integer) as integer
declare function gwgscl cdecl alias "gwgscl" (byval id as integer) as DISLIN_TYPE
declare sub gwgtxt cdecl alias "gwgtxt" (byval id as integer, byval ctext as zstring ptr)
declare function gwgxid cdecl alias "gwgxid" (byval id as integer) as integer
declare sub height cdecl alias "height" (byval nhchar as integer)
declare sub helve cdecl alias "helve" ()
declare sub helves cdecl alias "helves" ()
declare sub histog cdecl alias "histog" (byval xray as DISLIN_TYPE ptr, byval n as integer, byval x as DISLIN_TYPE ptr, byval y as DISLIN_TYPE ptr, byval m as integer ptr)
declare sub hname cdecl alias "hname" (byval nhchar as integer)
declare sub hsvrgb cdecl alias "hsvrgb" (byval xh as DISLIN_TYPE, byval xs as DISLIN_TYPE, byval xv as DISLIN_TYPE, byval xr as DISLIN_TYPE ptr, byval xg as DISLIN_TYPE ptr, byval xb as DISLIN_TYPE ptr)
declare sub hsymbl cdecl alias "hsymbl" (byval nhsym as integer)
declare sub htitle cdecl alias "htitle" (byval nhtit as integer)
declare sub hwfont cdecl alias "hwfont" ()
declare sub hworig cdecl alias "hworig" (byval nx as integer, byval ny as integer)
declare sub hwpage cdecl alias "hwpage" (byval nw as integer, byval nh as integer)
declare sub imgbox cdecl alias "imgbox" (byval nx as integer, byval ny as integer, byval nw as integer, byval nh as integer)
declare sub imgclp cdecl alias "imgclp" (byval nx as integer, byval ny as integer, byval nw as integer, byval nh as integer)
declare sub imgfin cdecl alias "imgfin" ()
declare sub imgfmt cdecl alias "imgfmt" (byval copt as zstring ptr)
declare sub imgini cdecl alias "imgini" ()
declare sub imgmod cdecl alias "imgmod" (byval copt as zstring ptr)
declare sub imgsiz cdecl alias "imgsiz" (byval nw as integer, byval nh as integer)
declare sub inccrv cdecl alias "inccrv" (byval ncrv as integer)
declare function incdat cdecl alias "incdat" (byval id as integer, byval im as integer, byval iy as integer) as integer
declare sub incfil cdecl alias "incfil" (byval cfil as zstring ptr)
declare sub incmrk cdecl alias "incmrk" (byval nmrk as integer)
declare function indrgb cdecl alias "indrgb" (byval xr as DISLIN_TYPE, byval xg as DISLIN_TYPE, byval xb as DISLIN_TYPE) as integer
declare sub intax cdecl alias "intax" ()
declare function intcha cdecl alias "intcha" (byval nx as integer, byval cstr as zstring ptr) as integer
declare function intlen cdecl alias "intlen" (byval nx as integer) as integer
declare function intrgb cdecl alias "intrgb" (byval xr as DISLIN_TYPE, byval xg as DISLIN_TYPE, byval xb as DISLIN_TYPE) as integer
declare sub itmcat cdecl alias "itmcat" (byval clis as zstring ptr, byval cstr as zstring ptr)
declare function itmcnt cdecl alias "itmcnt" (byval clis as zstring ptr) as integer
declare function itmstr cdecl alias "itmstr" (byval clis as zstring ptr, byval nlis as integer) as zstring ptr
declare sub labclr cdecl alias "labclr" (byval iclr as integer, byval copt as zstring ptr)
declare sub labdig cdecl alias "labdig" (byval ndig as integer, byval cax as zstring ptr)
declare sub labdis cdecl alias "labdis" (byval ndis as integer, byval cax as zstring ptr)
declare sub labels cdecl alias "labels" (byval clab as zstring ptr, byval cax as zstring ptr)
declare sub labjus cdecl alias "labjus" (byval copt as zstring ptr, byval cax as zstring ptr)
declare sub labl3d cdecl alias "labl3d" (byval copt as zstring ptr)
declare sub labmod cdecl alias "labmod" (byval ckey as zstring ptr, byval cval as zstring ptr, byval cax as zstring ptr)
declare sub labpos cdecl alias "labpos" (byval cpos as zstring ptr, byval cax as zstring ptr)
declare sub labtyp cdecl alias "labtyp" (byval ctyp as zstring ptr, byval cax as zstring ptr)
declare sub legclr cdecl alias "legclr" ()
declare sub legend cdecl alias "legend" (byval cbuf as zstring ptr, byval ncor as integer)
declare sub legini cdecl alias "legini" (byval cbuf as zstring ptr, byval nlin as integer, byval nmaxln as integer)
declare sub leglin cdecl alias "leglin" (byval cbuf as zstring ptr, byval cstr as zstring ptr, byval ilin as integer)
declare sub legopt cdecl alias "legopt" (byval x1 as DISLIN_TYPE, byval x2 as DISLIN_TYPE, byval x3 as DISLIN_TYPE)
declare sub legpat cdecl alias "legpat" (byval ityp as integer, byval ithk as integer, byval isym as integer, byval ipat as integer, byval iclr as integer, byval ilin as integer)
declare sub legpos cdecl alias "legpos" (byval nx as integer, byval ny as integer)
declare sub legtit cdecl alias "legtit" (byval cstr as zstring ptr)
declare sub lfttit cdecl alias "lfttit" ()
declare sub light cdecl alias "light" (byval copt as zstring ptr)
declare sub lincyc cdecl alias "lincyc" (byval index as integer, byval ityp as integer)
declare sub line_ cdecl alias "line" (byval nx as integer, byval ny as integer, byval nu as integer, byval nv as integer)
declare sub linesp cdecl alias "linesp" (byval xfac as DISLIN_TYPE)
declare sub lintyp cdecl alias "lintyp" (byval ntyp as integer)
declare sub linwid cdecl alias "linwid" (byval i as integer)
declare sub litmod cdecl alias "litmod" (byval id as integer, byval copt as zstring ptr)
declare sub litop3 cdecl alias "litop3" (byval id as integer, byval xr as DISLIN_TYPE, byval xg as DISLIN_TYPE, byval xb as DISLIN_TYPE, byval copt as zstring ptr)
declare sub litopt cdecl alias "litopt" (byval id as integer, byval xval as DISLIN_TYPE, byval copt as zstring ptr)
declare sub litpos cdecl alias "litpos" (byval id as integer, byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE, byval copt as zstring ptr)
declare sub lncap cdecl alias "lncap" (byval copt as zstring ptr)
declare sub lnjoin cdecl alias "lnjoin" (byval copt as zstring ptr)
declare sub lnmlt cdecl alias "lnmlt" (byval x as DISLIN_TYPE)
declare sub logtic cdecl alias "logtic" (byval cmod as zstring ptr)
declare sub lsechk cdecl alias "lsechk" (byval cmod as zstring ptr)
declare sub mapbas cdecl alias "mapbas" (byval cmod as zstring ptr)
declare sub mapfil cdecl alias "mapfil" (byval cfil as zstring ptr, byval copt as zstring ptr)
declare sub maplev cdecl alias "maplev" (byval cmod as zstring ptr)
declare sub mapmod cdecl alias "mapmod" (byval cmod as zstring ptr)
declare sub mappol cdecl alias "mappol" (byval xpol as DISLIN_TYPE, byval ypol as DISLIN_TYPE)
declare sub mapref cdecl alias "mapref" (byval ylower as DISLIN_TYPE, byval yupper as DISLIN_TYPE)
declare sub mapsph cdecl alias "mapsph" (byval xrad as DISLIN_TYPE)
declare sub marker cdecl alias "marker" (byval nsym as integer)
declare sub matop3 cdecl alias "matop3" (byval xr as DISLIN_TYPE, byval xg as DISLIN_TYPE, byval xb as DISLIN_TYPE, byval copt as zstring ptr)
declare sub matopt cdecl alias "matopt" (byval xval as DISLIN_TYPE, byval copt as zstring ptr)
declare sub mdfmat cdecl alias "mdfmat" (byval nx as integer, byval ny as integer, byval weight as DISLIN_TYPE)
declare sub messag cdecl alias "messag" (byval cstr as zstring ptr, byval nx as integer, byval ny as integer)
declare sub metafl cdecl alias "metafl" (byval cstr as zstring ptr)
declare sub mixalf cdecl alias "mixalf" ()
declare sub mixleg cdecl alias "mixleg" ()
declare function moment cdecl alias "moment" (byval xray as DISLIN_TYPE ptr, byval n as integer, byval copt as zstring ptr) as DISLIN_TYPE
declare sub mpaepl cdecl alias "mpaepl" (byval i as integer)
declare sub mplang cdecl alias "mplang" (byval x as DISLIN_TYPE)
declare sub mplclr cdecl alias "mplclr" (byval nbg as integer, byval nfg as integer)
declare sub mplpos cdecl alias "mplpos" (byval nx as integer, byval ny as integer)
declare sub mplsiz cdecl alias "mplsiz" (byval nsize as integer)
declare sub mpslogo cdecl alias "mpslogo" (byval nx as integer, byval ny as integer, byval nsize as integer, byval copt as zstring ptr)
declare sub msgbox cdecl alias "msgbox" (byval cstr as zstring ptr)
declare sub mshclr cdecl alias "mshclr" (byval ic as integer)
declare sub mylab cdecl alias "mylab" (byval cstr as zstring ptr, byval itick as integer, byval cax as zstring ptr)
declare sub myline cdecl alias "myline" (byval nray as integer ptr, byval n as integer)
declare sub mypat cdecl alias "mypat" (byval iang as integer, byval itype as integer, byval idens as integer, byval icross as integer)
declare sub mysymb cdecl alias "mysymb" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval n as integer, byval isym as integer, byval iflag as integer)
declare sub myvlt cdecl alias "myvlt" (byval xr as DISLIN_TYPE ptr, byval xg as DISLIN_TYPE ptr, byval xb as DISLIN_TYPE ptr, byval n as integer)
declare sub namdis cdecl alias "namdis" (byval ndis as integer, byval cax as zstring ptr)
declare sub name_ cdecl alias "name" (byval cstr as zstring ptr, byval cax as zstring ptr)
declare sub namjus cdecl alias "namjus" (byval copt as zstring ptr, byval cax as zstring ptr)
declare sub neglog cdecl alias "neglog" (byval eps as DISLIN_TYPE)
declare sub newmix cdecl alias "newmix" ()
declare sub newpag cdecl alias "newpag" ()
declare function nlmess cdecl alias "nlmess" (byval cstr as zstring ptr) as integer
declare function nlnumb cdecl alias "nlnumb" (byval x as DISLIN_TYPE, byval ndig as integer) as integer
declare sub noarln cdecl alias "noarln" ()
declare sub nobar cdecl alias "nobar" ()
declare sub nobgd cdecl alias "nobgd" ()
declare sub nochek cdecl alias "nochek" ()
declare sub noclip cdecl alias "noclip" ()
declare sub nofill cdecl alias "nofill" ()
declare sub nograf cdecl alias "nograf" ()
declare sub nohide cdecl alias "nohide" ()
declare sub noline cdecl alias "noline" (byval cax as zstring ptr)
declare sub number cdecl alias "number" (byval x as DISLIN_TYPE, byval ndig as integer, byval nx as integer, byval ny as integer)
declare sub numfmt cdecl alias "numfmt" (byval copt as zstring ptr)
declare sub numode cdecl alias "numode" (byval cdec as zstring ptr, byval cgrp as zstring ptr, byval cpos as zstring ptr, byval cfix as zstring ptr)
declare function nwkday cdecl alias "nwkday" (byval id as integer, byval im as integer, byval iy as integer) as integer
declare function nxlegn cdecl alias "nxlegn" (byval cbuf as zstring ptr) as integer
declare function nxposn cdecl alias "nxposn" (byval x as DISLIN_TYPE) as integer
declare function nylegn cdecl alias "nylegn" (byval cbuf as zstring ptr) as integer
declare function nyposn cdecl alias "nyposn" (byval y as DISLIN_TYPE) as integer
declare function nzposn cdecl alias "nzposn" (byval z as DISLIN_TYPE) as integer
declare function openfl cdecl alias "openfl" (byval cfil as zstring ptr, byval nu as integer, byval irw as integer) as integer
declare sub opnwin cdecl alias "opnwin" (byval id as integer)
declare sub origin cdecl alias "origin" (byval nx0 as integer, byval ny0 as integer)
declare sub page cdecl alias "page" (byval nw as integer, byval nh as integer)
declare sub pagera cdecl alias "pagera" ()
declare sub pagfll cdecl alias "pagfll" (byval nclr as integer)
declare sub paghdr cdecl alias "paghdr" (byval cstr1 as zstring ptr, byval cstr2 as zstring ptr, byval iopt as integer, byval idir as integer)
declare sub pagmod cdecl alias "pagmod" (byval cmod as zstring ptr)
declare sub pagorg cdecl alias "pagorg" (byval cpos as zstring ptr)
declare sub patcyc cdecl alias "patcyc" (byval index as integer, byval ipat as integer)
declare function pdfbuf cdecl alias "pdfbuf" (byval cbuf as zstring ptr, byval nmax as integer) as integer
declare sub pdfmod cdecl alias "pdfmod" (byval cmod as zstring ptr, byval ckey as zstring ptr)
declare sub pdfmrk cdecl alias "pdfmrk" (byval cstr as zstring ptr, byval copt as zstring ptr)
declare sub penwid cdecl alias "penwid" (byval x as DISLIN_TYPE)
declare sub pie cdecl alias "pie" (byval nxm as integer, byval nym as integer, byval nr as integer, byval a as DISLIN_TYPE, byval b as DISLIN_TYPE)
declare sub piebor cdecl alias "piebor" (byval iclr as integer)
declare sub pieclr cdecl alias "pieclr" (byval ic1 as integer ptr, byval ic2 as integer ptr, byval n as integer)
declare sub pieexp cdecl alias "pieexp" ()
declare sub piegrf cdecl alias "piegrf" (byval cbuf as zstring ptr, byval nlin as integer, byval xray as DISLIN_TYPE ptr, byval nseg as integer)
declare sub pielab cdecl alias "pielab" (byval clab as zstring ptr, byval cpos as zstring ptr)
declare sub pieopt cdecl alias "pieopt" (byval xf as DISLIN_TYPE, byval a as DISLIN_TYPE)
declare sub pietyp cdecl alias "pietyp" (byval ctyp as zstring ptr)
declare sub pievec cdecl alias "pievec" (byval ivec as integer, byval copt as zstring ptr)
declare sub pngmod cdecl alias "pngmod" (byval cmod as zstring ptr, byval ckey as zstring ptr)
declare sub point_ cdecl alias "point" (byval nx as integer, byval ny as integer, byval nb as integer, byval nh as integer, byval ncol as integer)
declare sub polar cdecl alias "polar" (byval xe as DISLIN_TYPE, byval xorg as DISLIN_TYPE, byval xstp as DISLIN_TYPE, byval yorg as DISLIN_TYPE, byval ystp as DISLIN_TYPE)
declare sub polcrv cdecl alias "polcrv" (byval cpol as zstring ptr)
declare sub polmod cdecl alias "polmod" (byval cpos as zstring ptr, byval cdir as zstring ptr)
declare sub pos2pt cdecl alias "pos2pt" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval xp as DISLIN_TYPE ptr, byval yp as DISLIN_TYPE ptr)
declare sub pos3pt cdecl alias "pos3pt" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE, byval xp as DISLIN_TYPE ptr, byval yp as DISLIN_TYPE ptr, byval zp as DISLIN_TYPE ptr)
declare function posifl cdecl alias "posifl" (byval nu as integer, byval nbyte as integer) as integer
declare sub projct cdecl alias "projct" (byval cproj as zstring ptr)
declare sub psfont cdecl alias "psfont" (byval cfont as zstring ptr)
declare sub psmode cdecl alias "psmode" (byval cmod as zstring ptr)
declare sub qplot cdecl alias "qplot" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval n as integer)
declare sub qplsca cdecl alias "qplsca" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval n as integer)
declare sub qplpie cdecl alias "qplpie" (byval xray as DISLIN_TYPE ptr, byval n as integer)
declare sub qplbar cdecl alias "qplbar" (byval yray as DISLIN_TYPE ptr, byval n as integer)
declare sub qplclr cdecl alias "qplclr" (byval zmat as DISLIN_TYPE ptr, byval n as integer, byval m as integer)
declare sub qplsur cdecl alias "qplsur" (byval zmat as DISLIN_TYPE ptr, byval n as integer, byval m as integer)
declare sub qplcon cdecl alias "qplcon" (byval zmat as DISLIN_TYPE ptr, byval n as integer, byval m as integer, byval nlv as integer)
declare function rbfpng cdecl alias "rbfpng" (byval cbuf as zstring ptr, byval nmax as integer) as integer
declare sub rbmp cdecl alias "rbmp" (byval cfil as zstring ptr)
declare function readfl cdecl alias "readfl" (byval nu as integer, byval cbuf as ubyte ptr, byval nbyte as integer) as integer
declare sub reawgt cdecl alias "reawgt" ()
declare sub recfll cdecl alias "recfll" (byval nx as integer, byval ny as integer, byval nw as integer, byval nh as integer, byval ncol as integer)
declare sub rectan cdecl alias "rectan" (byval nx as integer, byval ny as integer, byval nw as integer, byval nh as integer)
declare sub rel3pt cdecl alias "rel3pt" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE, byval xp as DISLIN_TYPE ptr, byval yp as DISLIN_TYPE ptr)
declare sub resatt cdecl alias "resatt" ()
declare sub reset_ cdecl alias "reset" (byval cname as zstring ptr)
declare sub revscr cdecl alias "revscr" ()
declare sub rgbhsv cdecl alias "rgbhsv" (byval xr as DISLIN_TYPE, byval xg as DISLIN_TYPE, byval xb as DISLIN_TYPE, byval xh as DISLIN_TYPE ptr, byval xs as DISLIN_TYPE ptr, byval xv as DISLIN_TYPE ptr)
declare sub rgif cdecl alias "rgif" (byval cfil as zstring ptr)
declare sub rgtlab cdecl alias "rgtlab" ()
declare sub rimage cdecl alias "rimage" (byval cfil as zstring ptr)
declare sub rlarc cdecl alias "rlarc" (byval xm as DISLIN_TYPE, byval ym as DISLIN_TYPE, byval xa as DISLIN_TYPE, byval xb as DISLIN_TYPE, byval a as DISLIN_TYPE, byval b as DISLIN_TYPE, byval t as DISLIN_TYPE)
declare sub rlarea cdecl alias "rlarea" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval n as integer)
declare sub rlcirc cdecl alias "rlcirc" (byval xm as DISLIN_TYPE, byval ym as DISLIN_TYPE, byval r as DISLIN_TYPE)
declare sub rlconn cdecl alias "rlconn" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE)
declare sub rlell cdecl alias "rlell" (byval xm as DISLIN_TYPE, byval ym as DISLIN_TYPE, byval a as DISLIN_TYPE, byval b as DISLIN_TYPE)
declare sub rline cdecl alias "rline" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval u as DISLIN_TYPE, byval v as DISLIN_TYPE)
declare sub rlmess cdecl alias "rlmess" (byval cstr as zstring ptr, byval x as DISLIN_TYPE, byval y as DISLIN_TYPE)
declare sub rlnumb cdecl alias "rlnumb" (byval x as DISLIN_TYPE, byval ndig as integer, byval xp as DISLIN_TYPE, byval yp as DISLIN_TYPE)
declare sub rlpie cdecl alias "rlpie" (byval xm as DISLIN_TYPE, byval ym as DISLIN_TYPE, byval r as DISLIN_TYPE, byval a as DISLIN_TYPE, byval b as DISLIN_TYPE)
declare sub rlpoin cdecl alias "rlpoin" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval nb as integer, byval nh as integer, byval ncol as integer)
declare sub rlrec cdecl alias "rlrec" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval xw as DISLIN_TYPE, byval xh as DISLIN_TYPE)
declare sub rlrnd cdecl alias "rlrnd" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval xb as DISLIN_TYPE, byval xh as DISLIN_TYPE, byval irnd as integer)
declare sub rlsec cdecl alias "rlsec" (byval xm as DISLIN_TYPE, byval ym as DISLIN_TYPE, byval r1 as DISLIN_TYPE, byval r2 as DISLIN_TYPE, byval a as DISLIN_TYPE, byval b as DISLIN_TYPE, byval ncol as integer)
declare sub rlstrt cdecl alias "rlstrt" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE)
declare sub rlsymb cdecl alias "rlsymb" (byval nsym as integer, byval x as DISLIN_TYPE, byval y as DISLIN_TYPE)
declare sub rlvec cdecl alias "rlvec" (byval x1 as DISLIN_TYPE, byval y1 as DISLIN_TYPE, byval x2 as DISLIN_TYPE, byval y2 as DISLIN_TYPE, byval ivec as integer)
declare sub rlwind cdecl alias "rlwind" (byval xk as DISLIN_TYPE, byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval nwidth as integer, byval a as DISLIN_TYPE)
declare sub rndrec cdecl alias "rndrec" (byval nx as integer, byval ny as integer, byval nb as integer, byval nh as integer, byval irnd as integer)
declare sub rpixel cdecl alias "rpixel" (byval ix as integer, byval iy as integer, byval iclr as integer ptr)
declare sub rpixls cdecl alias "rpixls" (byval iray as ubyte ptr, byval ix as integer, byval iy as integer, byval nw as integer, byval nh as integer)
declare sub rpng cdecl alias "rpng" (byval cfil as zstring ptr)
declare sub rppm cdecl alias "rppm" (byval cfil as zstring ptr)
declare sub rpxrow cdecl alias "rpxrow" (byval iray as ubyte ptr, byval ix as integer, byval iy as integer, byval n as integer)
declare sub rtiff cdecl alias "rtiff" (byval cfil as zstring ptr)
declare sub rvynam cdecl alias "rvynam" ()
declare sub scale cdecl alias "scale" (byval cscl as zstring ptr, byval cax as zstring ptr)
declare sub sclfac cdecl alias "sclfac" (byval xfac as DISLIN_TYPE)
declare sub sclmod cdecl alias "sclmod" (byval cmode as zstring ptr)
declare sub scrmod cdecl alias "scrmod" (byval cmode as zstring ptr)
declare sub sector cdecl alias "sector" (byval nx as integer, byval ny as integer, byval nr1 as integer, byval nr2 as integer, byval a as DISLIN_TYPE, byval b as DISLIN_TYPE, byval ncol as integer)
declare sub selwin cdecl alias "selwin" (byval id as integer)
declare sub sendbf cdecl alias "sendbf" ()
declare sub sendmb cdecl alias "sendmb" ()
declare sub sendok cdecl alias "sendok" ()
declare sub serif cdecl alias "serif" ()
declare sub setbas cdecl alias "setbas" (byval xfac as DISLIN_TYPE)
declare sub setcbk cdecl alias "setcbk" (byval callbck as sub cdecl(byval as DISLIN_TYPE ptr, byval as DISLIN_TYPE ptr), byval copt as zstring ptr)
declare sub setclr cdecl alias "setclr" (byval ncol as integer)
declare sub setcsr cdecl alias "setcsr" (byval copt as zstring ptr)
declare sub setexp cdecl alias "setexp" (byval fexp as DISLIN_TYPE)
declare sub setfil cdecl alias "setfil" (byval cfil as zstring ptr)
declare sub setgrf cdecl alias "setgrf" (byval c1 as zstring ptr, byval c2 as zstring ptr, byval c3 as zstring ptr, byval c4 as zstring ptr)
declare sub setind cdecl alias "setind" (byval index as integer, byval xr as DISLIN_TYPE, byval xg as DISLIN_TYPE, byval xb as DISLIN_TYPE)
declare sub setmix cdecl alias "setmix" (byval cstr as zstring ptr, byval cmix as zstring ptr)
declare sub setpag cdecl alias "setpag" (byval cpag as zstring ptr)
declare sub setres cdecl alias "setres" (byval npb as integer, byval nph as integer)
declare sub setrgb cdecl alias "setrgb" (byval xr as DISLIN_TYPE, byval xg as DISLIN_TYPE, byval xb as DISLIN_TYPE)
declare sub setscl cdecl alias "setscl" (byval xray as DISLIN_TYPE ptr, byval n as integer, byval cax as zstring ptr)
declare sub setvlt cdecl alias "setvlt" (byval cvlt as zstring ptr)
declare sub setxid cdecl alias "setxid" (byval id as integer, byval copt as zstring ptr)
declare sub shdafr cdecl alias "shdafr" (byval inray as integer ptr, byval ipray as integer ptr, byval icray as integer ptr, byval n as integer)
declare sub shdcha cdecl alias "shdcha" ()
declare sub shdcrv cdecl alias "shdcrv" (byval x1ray as DISLIN_TYPE ptr, byval y1ray as DISLIN_TYPE ptr, byval n1 as integer, byval x2ray as DISLIN_TYPE ptr, byval y2ray as DISLIN_TYPE ptr, byval n2 as integer)
declare sub shdeur cdecl alias "shdeur" (byval inray as integer ptr, byval ipray as integer ptr, byval icray as integer ptr, byval n as integer)
declare sub shdmap cdecl alias "shdmap" (byval cmap as zstring ptr)
declare sub shdmod cdecl alias "shdmod" (byval copt as zstring ptr, byval ctyp as zstring ptr)
declare sub shdpat cdecl alias "shdpat" (byval ipat as integer)
declare sub shdusa cdecl alias "shdusa" (byval inray as integer ptr, byval ipray as integer ptr, byval icray as integer ptr, byval n as integer)
declare sub shield cdecl alias "shield" (byval carea as zstring ptr, byval cmode as zstring ptr)
declare sub shlcir cdecl alias "shlcir" (byval nx as integer, byval ny as integer, byval nr as integer)
declare sub shldel cdecl alias "shldel" (byval id as integer)
declare sub shlell cdecl alias "shlell" (byval nx as integer, byval ny as integer, byval na as integer, byval nb as integer, byval t as DISLIN_TYPE)
declare function shlind cdecl alias "shlind" () as integer
declare sub shlpie cdecl alias "shlpie" (byval nx as integer, byval ny as integer, byval nr as integer, byval a as DISLIN_TYPE, byval b as DISLIN_TYPE)
declare sub shlpol cdecl alias "shlpol" (byval nxray as integer ptr, byval nyray as integer ptr, byval n as integer)
declare sub shlrct cdecl alias "shlrct" (byval nx as integer, byval ny as integer, byval nw as integer, byval nh as integer, byval t as DISLIN_TYPE)
declare sub shlrec cdecl alias "shlrec" (byval nx as integer, byval ny as integer, byval nw as integer, byval nh as integer)
declare sub shlres cdecl alias "shlres" (byval n as integer)
declare sub shlsur cdecl alias "shlsur" ()
declare sub shlvis cdecl alias "shlvis" (byval id as integer, byval cmode as zstring ptr)
declare sub simplx cdecl alias "simplx" ()
declare function skipfl cdecl alias "skipfl" (byval nu as integer, byval nbyte as integer) as integer
declare sub smxalf cdecl alias "smxalf" (byval calph as zstring ptr, byval c1 as zstring ptr, byval c2 as zstring ptr, byval n as integer)
declare sub solid cdecl alias "solid" ()
declare sub sortr1 cdecl alias "sortr1" (byval xray as DISLIN_TYPE ptr, byval n as integer, byval copt as zstring ptr)
declare sub sortr2 cdecl alias "sortr2" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval n as integer, byval copt as zstring ptr)
declare sub sphe3d cdecl alias "sphe3d" (byval xm as DISLIN_TYPE, byval ym as DISLIN_TYPE, byval zm as DISLIN_TYPE, byval r as DISLIN_TYPE, byval n as integer, byval m as integer)
declare sub spline cdecl alias "spline" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval n as integer, byval xsray as DISLIN_TYPE ptr, byval ysray as DISLIN_TYPE ptr, byval nspl as integer ptr)
declare sub splmod cdecl alias "splmod" (byval ngrad as integer, byval npts as integer)
declare sub strt3d cdecl alias "strt3d" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE)
declare sub strtpt cdecl alias "strtpt" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE)
declare sub surclr cdecl alias "surclr" (byval ictop as integer, byval icbot as integer)
declare sub surfce cdecl alias "surfce" (byval xray as DISLIN_TYPE ptr, byval n as integer, byval yray as DISLIN_TYPE ptr, byval m as integer, byval zmat as DISLIN_TYPE ptr)
declare sub surfcp cdecl alias "surfcp" (byval zfun as function cdecl(byval as DISLIN_TYPE, byval as DISLIN_TYPE, byval as integer) as DISLIN_TYPE, byval a1 as DISLIN_TYPE, byval a2 as DISLIN_TYPE, byval astp as DISLIN_TYPE, byval b1 as DISLIN_TYPE, byval b2 as DISLIN_TYPE, byval bstp as DISLIN_TYPE)
declare sub surfun cdecl alias "surfun" (byval zfun as function cdecl(byval as DISLIN_TYPE, byval as DISLIN_TYPE) as DISLIN_TYPE, byval ixpts as integer, byval xdel as DISLIN_TYPE, byval iypts as integer, byval ydel as DISLIN_TYPE)
declare sub suriso cdecl alias "suriso" (byval xray as DISLIN_TYPE ptr, byval nx as integer, byval yray as DISLIN_TYPE ptr, byval ny as integer, byval zray as DISLIN_TYPE ptr, byval nz as integer, byval wmat as DISLIN_TYPE ptr, byval wlev as DISLIN_TYPE)
declare sub surmat cdecl alias "surmat" (byval zmat as DISLIN_TYPE ptr, byval nx as integer, byval ny as integer, byval ixpts as integer, byval iypts as integer)
declare sub surmsh cdecl alias "surmsh" (byval copt as zstring ptr)
declare sub suropt cdecl alias "suropt" (byval copt as zstring ptr)
declare sub surshd cdecl alias "surshd" (byval xray as DISLIN_TYPE ptr, byval n as integer, byval yray as DISLIN_TYPE ptr, byval m as integer, byval zmat as DISLIN_TYPE ptr)
declare sub sursze cdecl alias "sursze" (byval xmin as DISLIN_TYPE, byval xmax as DISLIN_TYPE, byval ymin as DISLIN_TYPE, byval ymax as DISLIN_TYPE)
declare sub surtri cdecl alias "surtri" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval zray as DISLIN_TYPE ptr, byval n as integer, byval i1ray as integer ptr, byval i2ray as integer ptr, byval i3ray as integer ptr, byval ntri as integer)
declare sub survis cdecl alias "survis" (byval cvis as zstring ptr)
declare sub swapi2 cdecl alias "swapi2" (byval iray as short ptr, byval n as integer)
declare sub swapi4 cdecl alias "swapi4" (byval iray as integer ptr, byval n as integer)
declare sub swgatt cdecl alias "swgatt" (byval id as integer, byval cval as zstring ptr, byval copt as zstring ptr)
declare sub swgbox cdecl alias "swgbox" (byval ip as integer, byval ival as integer)
declare sub swgbut cdecl alias "swgbut" (byval ip as integer, byval ival as integer)
declare sub swgcb cdecl alias "swgcb" (byval id as integer, byval callbck as sub cdecl(byval as integer, byval as integer ptr), byval iray as integer ptr)
declare sub swgcbk cdecl alias "swgcbk" (byval id as integer, byval callbck as sub cdecl(byval as integer))
declare sub swgclr cdecl alias "swgclr" (byval xr as DISLIN_TYPE, byval xg as DISLIN_TYPE, byval xb as DISLIN_TYPE, byval copt as zstring ptr)
declare sub swgdrw cdecl alias "swgdrw" (byval x as DISLIN_TYPE)
declare sub swgfil cdecl alias "swgfil" (byval ip as integer, byval cval as zstring ptr)
declare sub swgfnt cdecl alias "swgfnt" (byval cfnt as zstring ptr, byval n as integer)
declare sub swgfoc cdecl alias "swgfoc" (byval id as integer)
declare sub swghlp cdecl alias "swghlp" (byval cstr as zstring ptr)
declare sub swgjus cdecl alias "swgjus" (byval ctyp as zstring ptr, byval cwidg as zstring ptr)
declare sub swglis cdecl alias "swglis" (byval ip as integer, byval ival as integer)
declare sub swgmix cdecl alias "swgmix" (byval c as zstring ptr, byval cstr as zstring ptr)
declare sub swgmod cdecl alias "swgmod" (byval cmod as zstring ptr)
declare sub swgmrg cdecl alias "swgmrg" (byval ival as integer, byval cstr as zstring ptr)
declare sub swgoff cdecl alias "swgoff" (byval nx as integer, byval ny as integer)
declare sub swgopt cdecl alias "swgopt" (byval cval as zstring ptr, byval copt as zstring ptr)
declare sub swgpop cdecl alias "swgpop" (byval copt as zstring ptr)
declare sub swgpos cdecl alias "swgpos" (byval nx as integer, byval ny as integer)
declare sub swgscl cdecl alias "swgscl" (byval ip as integer, byval xval as DISLIN_TYPE)
declare sub swgsiz cdecl alias "swgsiz" (byval nx as integer, byval ny as integer)
declare sub swgspc cdecl alias "swgspc" (byval xw as DISLIN_TYPE, byval xh as DISLIN_TYPE)
declare sub swgstp cdecl alias "swgstp" (byval step as DISLIN_TYPE)
declare sub swgtit cdecl alias "swgtit" (byval ctit as zstring ptr)
declare sub swgtxt cdecl alias "swgtxt" (byval ip as integer, byval cval as zstring ptr)
declare sub swgtyp cdecl alias "swgtyp" (byval ctyp as zstring ptr, byval cwidg as zstring ptr)
declare sub swgwin cdecl alias "swgwin" (byval nx as integer, byval ny as integer, byval nw as integer, byval nh as integer)
declare sub swgwth cdecl alias "swgwth" (byval nchar as integer)
declare sub symbol cdecl alias "symbol" (byval nsym as integer, byval nx as integer, byval ny as integer)
declare sub symfil cdecl alias "symfil" (byval cdev as zstring ptr, byval cstat as zstring ptr)
declare sub symrot cdecl alias "symrot" (byval angle as DISLIN_TYPE)
declare function tellfl cdecl alias "tellfl" (byval nu as integer) as integer
declare sub texmod cdecl alias "texmod" (byval copt as zstring ptr)
declare sub texopt cdecl alias "texopt" (byval copt as zstring ptr, byval ctyp as zstring ptr)
declare sub thkcrv cdecl alias "thkcrv" (byval nthk as integer)
declare sub ticks cdecl alias "ticks" (byval itick as integer, byval cax as zstring ptr)
declare sub ticlen cdecl alias "ticlen" (byval nmaj as integer, byval nmin as integer)
declare sub ticmod cdecl alias "ticmod" (byval copt as zstring ptr, byval cax as zstring ptr)
declare sub ticpos cdecl alias "ticpos" (byval cpos as zstring ptr, byval cax as zstring ptr)
declare sub tifmod cdecl alias "tifmod" (byval n as integer, byval cval as zstring ptr, byval copt as zstring ptr)
declare sub tiforg cdecl alias "tiforg" (byval nx as integer, byval ny as integer)
declare sub tifwin cdecl alias "tifwin" (byval nx as integer, byval ny as integer, byval nw as integer, byval nh as integer)
declare sub timopt cdecl alias "timopt" ()
declare sub titjus cdecl alias "titjus" (byval copt as zstring ptr)
declare sub title cdecl alias "title" ()
declare sub titlin cdecl alias "titlin" (byval cstr as zstring ptr, byval n as integer)
declare sub titpos cdecl alias "titpos" (byval copt as zstring ptr)
declare sub trfco1 cdecl alias "trfco1" (byval xray as DISLIN_TYPE ptr, byval n as integer, byval cfrom as zstring ptr, byval cto as zstring ptr)
declare sub trfco2 cdecl alias "trfco2" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval n as integer, byval cfrom as zstring ptr, byval cto as zstring ptr)
declare sub trfco3 cdecl alias "trfco3" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval zray as DISLIN_TYPE ptr, byval n as integer, byval cfrom as zstring ptr, byval cto as zstring ptr)
declare sub trfdat cdecl alias "trfdat" (byval ndays as integer, byval id as integer ptr, byval im as integer ptr, byval iy as integer ptr)
declare sub trfmat cdecl alias "trfmat" (byval zmat as DISLIN_TYPE ptr, byval nx as integer, byval ny as integer, byval zmat2 as DISLIN_TYPE ptr, byval nx2 as integer, byval ny2 as integer)
declare sub trfrel cdecl alias "trfrel" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval n as integer)
declare sub trfres cdecl alias "trfres" ()
declare sub trfrot cdecl alias "trfrot" (byval xang as DISLIN_TYPE, byval nx as integer, byval ny as integer)
declare sub trfscl cdecl alias "trfscl" (byval xscl as DISLIN_TYPE, byval yscl as DISLIN_TYPE)
declare sub trfshf cdecl alias "trfshf" (byval nx as integer, byval ny as integer)
declare function triang cdecl alias "triang" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval n as integer, byval i1ray as integer ptr, byval i2ray as integer ptr, byval i3ray as integer ptr, byval nmax as integer) as integer
declare sub trifll cdecl alias "trifll" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr)
declare sub triplx cdecl alias "triplx" ()
declare sub tripts cdecl alias "tripts" (byval xray as DISLIN_TYPE ptr, byval yray as DISLIN_TYPE ptr, byval zray as DISLIN_TYPE ptr, byval n as integer, byval i1ray as integer ptr, byval i2ray as integer ptr, byval i3ray as integer ptr, byval ntri as integer, byval zlev as DISLIN_TYPE, byval xpts as DISLIN_TYPE ptr, byval ypts as DISLIN_TYPE ptr, byval maxpts as integer, byval nptray as integer ptr, byval maxray as integer, byval nlins as integer ptr)
declare function trmlen cdecl alias "trmlen" (byval cstr as zstring ptr) as integer
declare sub txtjus cdecl alias "txtjus" (byval copt as zstring ptr)
declare sub unit cdecl alias "unit" (byval fp as any ptr)
declare sub units cdecl alias "units" (byval copt as zstring ptr)
declare sub upstr cdecl alias "upstr" (byval cstr as zstring ptr)
declare sub vang3d cdecl alias "vang3d" (byval a as DISLIN_TYPE)
declare sub vclp3d cdecl alias "vclp3d" (byval x1 as DISLIN_TYPE, byval x2 as DISLIN_TYPE)
declare sub vector cdecl alias "vector" (byval nx1 as integer, byval ny1 as integer, byval nx2 as integer, byval ny2 as integer, byval ivec as integer)
declare sub vectr3 cdecl alias "vectr3" (byval x1 as DISLIN_TYPE, byval y1 as DISLIN_TYPE, byval z1 as DISLIN_TYPE, byval x2 as DISLIN_TYPE, byval y2 as DISLIN_TYPE, byval z2 as DISLIN_TYPE, byval ivec as integer)
declare sub vfoc3d cdecl alias "vfoc3d" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE, byval cview as zstring ptr)
declare sub view3d cdecl alias "view3d" (byval xvu as DISLIN_TYPE, byval yvu as DISLIN_TYPE, byval zvu as DISLIN_TYPE, byval cvu as zstring ptr)
declare sub vkxbar cdecl alias "vkxbar" (byval nvfx as integer)
declare sub vkybar cdecl alias "vkybar" (byval nvfy as integer)
declare sub vkytit cdecl alias "vkytit" (byval nvfy as integer)
declare sub vltfil cdecl alias "vltfil" (byval cfl as zstring ptr, byval copt as zstring ptr)
declare sub vup3d cdecl alias "vup3d" (byval a as DISLIN_TYPE)
declare function wgapp cdecl alias "wgapp" (byval ip as integer, byval clab as zstring ptr) as integer
declare function wgbas cdecl alias "wgbas" (byval ip as integer, byval ctyp as zstring ptr) as integer
declare function wgbox cdecl alias "wgbox" (byval ip as integer, byval cstr as zstring ptr, byval isel as integer) as integer
declare function wgbut cdecl alias "wgbut" (byval ip as integer, byval cstr as zstring ptr, byval ival as integer) as integer
declare function wgcmd cdecl alias "wgcmd" (byval ip as integer, byval clab as zstring ptr, byval cmd as zstring ptr) as integer
declare function wgdlis cdecl alias "wgdlis" (byval ip as integer, byval cstr as zstring ptr, byval isel as integer) as integer
declare function wgdraw cdecl alias "wgdraw" (byval ip as integer) as integer
declare function wgfil cdecl alias "wgfil" (byval ip as integer, byval clab as zstring ptr, byval cstr as zstring ptr, byval cmask as zstring ptr) as integer
declare sub wgfin cdecl alias "wgfin" ()
declare function wgini cdecl alias "wgini" (byval ctyp as zstring ptr) as integer
declare function wglab cdecl alias "wglab" (byval ip as integer, byval cstr as zstring ptr) as integer
declare function wglis cdecl alias "wglis" (byval ip as integer, byval cstr as zstring ptr, byval isel as integer) as integer
declare function wgltxt cdecl alias "wgltxt" (byval ip as integer, byval clab as zstring ptr, byval ctext as zstring ptr, byval iper as integer) as integer
declare function wgok cdecl alias "wgok" (byval ip as integer) as integer
declare function wgpbut cdecl alias "wgpbut" (byval ip as integer, byval clab as zstring ptr) as integer
declare function wgpop cdecl alias "wgpop" (byval ip as integer, byval clab as zstring ptr) as integer
declare function wgquit cdecl alias "wgquit" (byval ip as integer) as integer
declare function wgscl cdecl alias "wgscl" (byval ip as integer, byval cstr as zstring ptr, byval x1 as DISLIN_TYPE, byval x2 as DISLIN_TYPE, byval xval as DISLIN_TYPE, byval ndez as integer) as integer
declare function wgstxt cdecl alias "wgstxt" (byval ip as integer, byval nsize as integer, byval nmax as integer) as integer
declare function wgtxt cdecl alias "wgtxt" (byval ip as integer, byval cstr as zstring ptr) as integer
declare sub widbar cdecl alias "widbar" (byval nzb as integer)
declare sub wimage cdecl alias "wimage" (byval cfil as zstring ptr)
declare sub winapp cdecl alias "winapp" (byval copt as zstring ptr)
declare sub windbr cdecl alias "windbr" (byval xk as DISLIN_TYPE, byval nx as integer, byval ny as integer, byval nwidth as integer, byval a as DISLIN_TYPE)
declare sub window_ cdecl alias "window" (byval nx as integer, byval ny as integer, byval nw as integer, byval nh as integer)
declare sub winfin cdecl alias "winfin" (byval iopt as integer)
declare sub winfnt cdecl alias "winfnt" (byval cfont as zstring ptr)
declare function winid cdecl alias "winid" () as integer
declare sub winini cdecl alias "winini" (byval p1 as any ptr, byval p2 as any ptr, byval i1 as integer, byval i2 as integer)
declare sub winkey cdecl alias "winkey" (byval copt as zstring ptr)
declare sub winmod cdecl alias "winmod" (byval copt as zstring ptr)
declare sub winopt cdecl alias "winopt" (byval iopt as integer, byval copt as zstring ptr)
declare sub winsiz cdecl alias "winsiz" (byval nw as integer, byval nh as integer)
declare sub wintit cdecl alias "wintit" (byval cstr as zstring ptr)
declare sub wmfmod cdecl alias "wmfmod" (byval cmod as zstring ptr, byval ckey as zstring ptr)
declare sub world cdecl alias "world" ()
declare sub wpixel cdecl alias "wpixel" (byval ix as integer, byval iy as integer, byval iclr as integer)
declare sub wpixls cdecl alias "wpixls" (byval iray as ubyte ptr, byval ix as integer, byval iy as integer, byval nw as integer, byval nh as integer)
declare sub wpxrow cdecl alias "wpxrow" (byval iray as ubyte ptr, byval ix as integer, byval iy as integer, byval n as integer)
declare function writfl cdecl alias "writfl" (byval nu as integer, byval cbuf as ubyte ptr, byval nbyte as integer) as integer
declare sub wtiff cdecl alias "wtiff" (byval cfil as zstring ptr)
declare sub x11fnt cdecl alias "x11fnt" (byval cfont as zstring ptr, byval copt as zstring ptr)
declare sub x11mod cdecl alias "x11mod" (byval copt as zstring ptr)
declare function x2dpos cdecl alias "x2dpos" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE) as DISLIN_TYPE
declare function x3dabs cdecl alias "x3dabs" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE) as DISLIN_TYPE
declare function x3dpos cdecl alias "x3dpos" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE) as DISLIN_TYPE
declare function x3drel cdecl alias "x3drel" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE) as DISLIN_TYPE
declare sub xaxgit cdecl alias "xaxgit" ()
declare sub xaxis cdecl alias "xaxis" (byval xa as DISLIN_TYPE, byval xe as DISLIN_TYPE, byval xorg as DISLIN_TYPE, byval xstp as DISLIN_TYPE, byval nl as integer, byval cstr as zstring ptr, byval it as integer, byval nx as integer, byval ny as integer)
declare sub xaxlg cdecl alias "xaxlg" (byval xa as DISLIN_TYPE, byval xe as DISLIN_TYPE, byval xorg as DISLIN_TYPE, byval xstp as DISLIN_TYPE, byval nl as integer, byval cstr as zstring ptr, byval it as integer, byval nx as integer, byval ny as integer)
declare sub xaxmap cdecl alias "xaxmap" (byval xa as DISLIN_TYPE, byval xe as DISLIN_TYPE, byval xorg as DISLIN_TYPE, byval xstp as DISLIN_TYPE, byval cstr as zstring ptr, byval it as integer, byval ny as integer)
declare sub xcross cdecl alias "xcross" ()
declare sub xdraw cdecl alias "xdraw" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE)
declare function xinvrs cdecl alias "xinvrs" (byval n as integer) as DISLIN_TYPE
declare sub xmove cdecl alias "xmove" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE)
declare function xposn cdecl alias "xposn" (byval x as DISLIN_TYPE) as DISLIN_TYPE
declare function y2dpos cdecl alias "y2dpos" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE) as DISLIN_TYPE
declare function y3dabs cdecl alias "y3dabs" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE) as DISLIN_TYPE
declare function y3dpos cdecl alias "y3dpos" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE) as DISLIN_TYPE
declare function y3drel cdecl alias "y3drel" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE) as DISLIN_TYPE
declare sub yaxgit cdecl alias "yaxgit" ()
declare sub yaxis cdecl alias "yaxis" (byval ya as DISLIN_TYPE, byval ye as DISLIN_TYPE, byval yor as DISLIN_TYPE, byval ystp as DISLIN_TYPE, byval nl as integer, byval cstr as zstring ptr, byval it as integer, byval nx as integer, byval ny as integer)
declare sub yaxlg cdecl alias "yaxlg" (byval ya as DISLIN_TYPE, byval ye as DISLIN_TYPE, byval yor as DISLIN_TYPE, byval ystp as DISLIN_TYPE, byval nl as integer, byval cstr as zstring ptr, byval it as integer, byval nx as integer, byval ny as integer)
declare sub yaxmap cdecl alias "yaxmap" (byval ya as DISLIN_TYPE, byval ye as DISLIN_TYPE, byval yor as DISLIN_TYPE, byval ystp as DISLIN_TYPE, byval cstr as zstring ptr, byval it as integer, byval ny as integer)
declare sub ycross cdecl alias "ycross" ()
declare function yinvrs cdecl alias "yinvrs" (byval n as integer) as DISLIN_TYPE
declare function yposn cdecl alias "yposn" (byval y as DISLIN_TYPE) as DISLIN_TYPE
declare function z3dpos cdecl alias "z3dpos" (byval x as DISLIN_TYPE, byval y as DISLIN_TYPE, byval z as DISLIN_TYPE) as DISLIN_TYPE
declare sub zaxis cdecl alias "zaxis" (byval za as DISLIN_TYPE, byval ze as DISLIN_TYPE, byval zor as DISLIN_TYPE, byval zstp as DISLIN_TYPE, byval nl as integer, byval cstr as zstring ptr, byval it as integer, byval id as integer, byval nx as integer, byval ny as integer)
declare sub zaxlg cdecl alias "zaxlg" (byval za as DISLIN_TYPE, byval ze as DISLIN_TYPE, byval zor as DISLIN_TYPE, byval zstp as DISLIN_TYPE, byval nl as integer, byval cstr as zstring ptr, byval it as integer, byval id as integer, byval nx as integer, byval ny as integer)
declare sub zbffin cdecl alias "zbffin" ()
declare function zbfini cdecl alias "zbfini" () as integer
declare sub zbflin cdecl alias "zbflin" (byval x1 as DISLIN_TYPE, byval y1 as DISLIN_TYPE, byval z1 as DISLIN_TYPE, byval x2 as DISLIN_TYPE, byval y2 as DISLIN_TYPE, byval z2 as DISLIN_TYPE)
declare sub zbftri cdecl alias "zbftri" (byval x as DISLIN_TYPE ptr, byval y as DISLIN_TYPE ptr, byval z as DISLIN_TYPE ptr, byval ic as integer ptr)
declare sub zscale cdecl alias "zscale" (byval za as DISLIN_TYPE, byval ze as DISLIN_TYPE)

#endif
