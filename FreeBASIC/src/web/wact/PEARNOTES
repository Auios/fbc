--------------------------------------------------------------------------------
PEAR NOTES
--------------------------------------------------------------------------------
$Id$

The PHP Extension and Application Repository (PEAR: http://pear.php.net)
provides a collection of architectural class for solving common problems in
web applications.

WACT makes use of PEAR libraries (known as "packages" in PEAR-terminology),
where applicable, as foundations for "higher level" code. PEAR packages are used 
in various optional components of WACT. (e.g WACT provides a driver which adapts 
PEAR::DB, providing a gateway to many different types of database).

To use PEAR with WACT you need to be familiar with the mechanisms PEAR provides 
for installing packages on your system. The PEAR documentation,
http://pear.php.net/manual/, provides some insight but a degree of knowledge is
assumed. These notes should fill in the blanks.

--------------------------------------------------------------------------------
The PEAR Package Manager (PPM)
--------------------------------------------------------------------------------

PEAR provides the "PEAR Package Manager" (PPM) as a tool to control which
packages are installed on your system. The PPM provides a client for your system
which "talks" to the PPM server at http://pear.php.net using XML-RPC, allowing
packages to be downloaded directly from the PEAR website and installed.

All PEAR packages come with an XML file (package.xml) which the PPM client
examines to determine how it should install the package. Typically a package.xml
file identifies where the PHP scripts within the package should be installed,
relative to your base PEAR directory (more on that in a moment).

The PPM client has a number of alternative "Front Ends" (user interfaces), the
most mature (and effectively the default) being the command line interface while
a web interface should help you work with PEAR on a server where you do not have
command line access. A PHP-GTK interface is also available (status unknown).

This document will focus on the command line interface to PEAR. For a
description of setting up the web based interface, see;

http://www.phpkitchen.com/article.php?story=20021201062516970

--------------------------------------------------------------------------------
Setting up the PEAR Package Manager Command Line Interface (PPM CLI)
--------------------------------------------------------------------------------

With recent PHP distributions, the PPM CLI is bundled so you may already find
it installed on your system. The description here starts from scratch, assuming
nothing is installed. Setting up the PPM takes a little effort but once done,
it makes working with PEAR very easy (so it's worth the effort).

1. Make sure the php binary is in your system path, so you can execute PHP
   scripts from the command line. Type "php -h" and you should see the help
   description.
   On Unix based systems, where PHP is installed, it should already
   be available for use (typically it's located under /usr/local/bin/ or
   /usr/bin/). You may need to modify you accounts .profile (in your
   home directory) e.g. adding the line "export PATH /usr/local/bin"
   You may need to battle with your web host, if they have not
   provided you with permissions to execute the binary (consider the web
   interface to the PPM...).
   On Windows based systems you will need to update your systems path variable
   (Control Panel > System > Advanced > Environment Variables > System Vars).
   With Windows distributions there should be two versions of the php
   executable under your PHP installation directory. It's recommended to add
   the executable in <php_install_dir>\cli\php.exe to your system path variable
   (forget exactly why - believe this is to avoid conflicts with PHP CGI).

2. Follow the instructions here:
   http://pear.php.net/manual/en/installation.getting.php
   This involves downloading a PHP script (http://go-pear.org/) which you need
   to execute via the command line (e.g. "php go-pear.php"). It invokes the
   installer which sets up the Pear Package Manager for you. You will need
   to answer some questions to complete the installation process. Some notes;

    - The install script needs access to the PEAR website, using the HTTP port
      (80). If you're connected directly to the Internet, no change is
      required. If you're behind a proxy server, you will need to provide
      details of the proxy server (the installer will prompt you for this).

    - Installation prefix: set this a base directory under which the PEAR
      Package Manager (and later on, packages themselves) will be installed.

    - Binaries directory: "binaries" actually refers to PHP or shell scripts
      (in particular the "pear" script) which you will execute from the command
      line. A good value for this setting is $prefix/bin. Once the installation
      is complete you should ALSO add this directory you your path variable,
      so you can execute the "pear" script directly from the command line.

    - PHP Code directory: under this directory is where the PEAR packages
      themselves will be installed. You should add this directory to your
      PHP include path, because PEAR packages will "expect" files to be
      available (for inclusion) relative to this directory. A good value
      for this setting is $prefix/lib. To modify your include path, you can
      either edit your php.ini file directly (assuming you have access) or
      use a .htaccess file (assuming Apache with the AllowOverride set
      correctly: http://httpd.apache.org/docs/mod/core.html#allowoverride
      by your host) containing;

      php_value "include_path" ".:/home/username/pear/lib"

      All else failing, you can also use the PHP function ini_set in your
      code e.g. "ini_set('include_path','.:/home/username/pear/lib');"

      Note that the "directory separator" colon is for Unix based
      systems. Windows uses the separator ;.

    - Documentation Base Directory: most PEAR packages come with examples
      of how to use the package. This directory specifies where the examples
      should be placed. If you're setting PEAR up on a development system
      (i.e.. where it's not publicly exposed to the Internet) you may
      want to set this directory to somewhere below your web servers document
      root directory, so you can run the examples from your browser.

    - Data Base Directory: some PEAR packages come with additional files
      containing data that package needs. This setting specifies the base
      location for that data (a good setting may be $prefix/data).

    - Tests Base Path: a few PEAR packages come with unit test script for
      execution with PEAR::PHP_Unit. They will be placed below this directory.

    - php.exe. path (Windows only): the path to the PHP executable

    Once the installation is complete, for Windows users, it's a good idea to
    run the registry file which was placed in the $prefix directory.

--------------------------------------------------------------------------------
Configuring the Pear Package Manager
--------------------------------------------------------------------------------

Assuming everything is now set up correctly, you should be able to type "pear"
from the command line and get a list of subcommands that the pear script
accepts.

Type "pear config-show" to get a list of the current settings. If you're behind
a proxy, you'll need to modify this setting to be able to install PEAR packages
directly e.g.

pear config-set http_proxy http://username:password@proxy.myisp.com

To get help on any configuration setting, using config-help e.g.

pear config-help preferred_state

The preferred_state setting is import to WACT (more below). To begin with, make
sure it is set to "stable".

The settings are stored as a serialized PHP array in a file called pear.ini
(it will attempt to place this in the same location as php.ini).

--------------------------------------------------------------------------------
Installing PEAR Packages
--------------------------------------------------------------------------------

With the Pear Package Manager set up, and the base of the PEAR library in your
PHP include path (see above on PHP Code Directory) packages can now be installed
directly from the command line and used in your code by including them with the
relative PEAR include path.

For example type;

pear install Cache_Lite

This will install the latest version  PEAR::Cache_Lite
(http://pear.php.net/Cache_Lite) into your PEAR library directory, creating the
subdirectory "Cache" below which the Cache_Lite PHP scripts are stored. In this
case, the package .tgz file itself was fetched directly from the PEAR website
(over XML-RPC).

This is not the only way PEAR packages can be installed though. If the
package file is available directly via a URL, you can install it via that URL.

If I specifically want PEAR::Cache_Lite version 1.1 (rather that the current
version 1.2) I can simply point the installed at the URL where it can be
downloaded from e.g.

pear uninstall Cache_Lite    <<< first uninstall it

pear install http://pear.php.net/get/Cache_Lite-1.1.tgz

A third alternative exists which is to install the package file directly
from your filesystem e.g.;

pear install /home/username/Cache_Lite-1.1.tgz

Packages can be browsed and downloaded from http://pear.php.net/packages.php

Some packages have dependances on other PEAR packages. Normally the PPM
will warn you about these (assuming the the author of the package has
identified the dependances in the package.xml file) and prevent you from
installing a package until the required dependances have been installed.

--------------------------------------------------------------------------------
Installing PEAR Packages for WACT
--------------------------------------------------------------------------------

The following PEAR packages are used in WACT (you may not need them all);

PEAR::Cache_Lite - required for <cache:outputcache/> tag
PEAR::Calendar - required for <calendar:month /> tag
PEAR::DB (1.4.0+) - required if you wish to use the PEAR::DB driver in WACT
PEAR::MDB (1.3.0+) - required if you wish to use the PEAR::MDB driver in WACT
PEAR::MDB2 (2.0.0beta2) - required if you wish to use the PEAR::MDB2 driver in WACT

++ PEAR::Cache_Lite (1.1+)
Make sure you have the "preferred_state" set to "stable";

pear config-set preferred_state stable
pear install Cache_Lite

Alternatively;

pear install http://pear.php.net/get/Cache_Lite-1.2.tgz

++ PEAR::Calendar (0.4+)
The current version of PEAR::Calendar has "beta" status, so the preferred
state has to be set accordingly;

pear config-set preferred_state beta
pear install Calendar

Alternatively;

pear install http://pear.php.net/get/Calendar-0.4.tgz

++ PEAR::DB (1.4.0+)
Unless you specify otherwise, PEAR::DB is installed by default when you set
up the PPM. Otherwise, to install manually;

Make sure you have the "preferred_state" set to "stable";

pear config-set preferred_state stable
pear install DB

Alternatively;

pear install http://pear.php.net/get/DB-1.5.0RC2.tgz

++ PEAR::MDB(1.3.0+)
pear install MDB

Alternatively;

pear install http://pear.php.net/get/MDB-1.3.0.tgz

++ PEAR::MDB2(2.0.0beta2)
Make sure you have the "preferred_state" set to "stable";

pear config-set preferred_state beta
pear install MDB2

or just

pear install MDB2-beta


Alternatively;

pear installhttp://pear.php.net/get/MDB2-2.0.0beta2.tgz

