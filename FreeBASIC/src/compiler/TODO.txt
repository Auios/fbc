
[ ] CHR$ and ASC compile-time evaluation

[ ] idx is being loaded twice even been already a register

[ ] var initializers: dim myvar as sometype = ( initialvalue ) -- has to support arrays and types too

[ ] "ON expr GOTO|GOSUB label" is wrong, expr is an integer index into the label list

*** *** *** *** ***
[ ] macros   -- with recursive expansion and local vars
[ ] typedefs -- can be done with one pass? ie, it should allow:
		typedef bleh as bar
		type foo: b as bleh ptr: end type
		type bar: f as foo ptr: end type
[ ] classes  -- single inheritance, plus interfaces -- Java/Php5-ish: CLASS EXTENDS IMPLEMENTS THROWS

*** yet another optimizations ***
[ ] get hide of double fxch's (needs peephole optimization at EMIT)
[ ] load after store elimination (at IR?)

*** future ***
[ ] AndThen and OrElse, short-circuit versions of And and Or

[ ] use a DAG for common sub-expr opt (don't mess up w/ FPU??)


	a = b + c
	b = a - d
	c = b + c
	d = a - d


    v2() = v1(_B) + v0(_C)
 v3(_A) := v2()
    v6() = v5(_A) - v4(_D)
 v7(_B) := v6()
   v10() = v9(_B) + v8(_C)
v11(_C) := v10()
   v14() = v13(_A) - v12(_D)
v15(_D) := v14()

	mov 	eax, b
	Add 	eax, c
	mov 	a, eax
	mov 	eax, a
	Sub 	eax, d
	mov 	b, eax
	mov 	eax, b
	Add 	eax, c
	mov 	c, eax
	mov 	eax, a
	Sub 	eax, d
	mov 	d, eax

|v1|v0|op:2-->|v2
|op:1-->|v3
|v5|op:3-->|v6|v14
|op:1-->|v7|v15
|op:2-->|v10
|op:1-->|v11

	mov		eax, b
	Add		eax, c
	mov		a, eax
	Sub		eax, d
	mov		b, eax
	mov		d, eax
	Add		eax, c
	mov		c, eax
