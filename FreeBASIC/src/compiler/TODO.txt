
[ ] files cannot be opened as text-mode in the rlib or the newline handling
    will be screwed when WRITE'g/PRINT'g wstring's, do that ourselves - no
    generic pnWrite then, it depends on the file mode, binary or text

[ ] file names with periods (.)'s cannot be opened anymore?

[ ] passing a temporary string to a zstring ptr should not make
    yet-another temporary assignament in hStrParamToPtrArg(),
    just a pointer copy that later should be strDelete()'d

[ ] add the wstring type:
    - auto-convert literal strings to w- or z- on assignments,
      depending on the l-hand side type
    - implement all missing rtlib wstring routines
      - OPEN... INPUT|APPEND|OUTPUT ENCODING "" -- no bloat
      - LINE INPUT and INPUT -- inferred
      - WINPUT$ -- no inferrence
    - fix the !!!FIXME!!!'s in the rtlib

[ ] add the cast() intrinsic function - CAST( type, expression ), works like in C,
    so macros (and maybe function templates one day) can be better designed

[ ] add support for functions returning references (reuse "BYREF"), so those can
    be automatically dereferenced - but *NOT* deleted, only non-local data can
    be returned by reference in C++

[ ] SCOPE..END SCOPE:
    - vars should be reused (that's is, the stack "rewinded") because it's only
      assured that the vars will be initialized to 0 when the scope block is
      entered by the first time, so reusing would be more efficient - that will
      screw up var-len strings, the descriptor MUST be zeroed or an assignment
      will fail, same care must be taken with object instances, but then the
      constructor will be called, it would be way easier if STRING was actually
      a class.. nm..
    - error handlers should be restored too (or not allowed at all)

[ ] windows api headers:
    - update the current headers with the very latest Mingw ones - there are loads
      of additions in some headers
    - add missing headers: win/__TODO__ and others not translated (DX, TAPI, etc)
    - check all PSHPACK#.h inclusions and also #pragma push|pop
    - convert the once-nameless unions (u as) and structs (s as) to inner nameless types
    - add the #inclib's
    - add the missing macros (MAKELONG etc) and complex #define's (ones with type casting)
    - add UNICODE and ASCII support

[ ] add fix-len and zstring * support to array args passed by descriptor

[ ] named field initializers: ( "foo" => bar, "udt" => ( 1, { 2, 3 }, 4 ) )
    - all fields initialized must be named as a special parser routine will have to be used,
      that will keep track of what wasn't initialized to fill 'em with 0's - static only, locals
      are already cleared


*** *** *** *** ***
[ ] full debug support
    - add dynamic arrays - couldn't get GDB to use Fortran-like arrays
    - each overloaded function will show the locals of *ALL* functions

[ ] AndAlso and OrElse, short-circuit versions of And and Or
    - pay attention to register spills if functions or complex expressions are
      used in left or right sides

[ ] inline functions
    - better than macros as they can be "turned off" when debugged
    - too hard to be added now due the register spills, IR must handle inter blocks and
      keep track of live vregs

[ ] classes
    - *MUST* follow the GCC 3.x ABI to make it easier to reuse C++ libs compiled by GCC
    - Java/Php5-ish syntax: CLASS INTERFACE EXTENDS IMPLEMENTS THROWS ABSTRACT
    - single inheritance, plus interfaces
    - exceptions - with unwind support
    - operator overloading
    - pure virtual methods
    - down casting
    - name space
    - static constructors and destructors
    - some support for RTTI

