{{fbdoc item="title" value="Arrays"}}
----

{{fbdoc item="desc"}}
	Arrays are [[DtVariables Variables]] which contain more than one value. The value decided upon is chosen using an [[ProPgArrayIndex Array Index]]. In FreeBASIC, Any array must be declared before it's first use using the {{fbdoc item="keyword" value="KeyPgDim|DIM"}} command.
	
	The best way to conceptualize an array is look at it like a spreadsheet. For example, if you had an array called myArray which contained elements (1 to 10), and was filled with random numbers, you could look at it like this:
%%
Index        Data
1              5
2              2
3              6
4              5
5              9
6              1
7              0
8              4
9              5
10             7
%%
	Keep in mind that the numbers in the Data column are completely arbitrary in our example. When you create an array in FreeBASIC using the DIM command, the elements are all set to 0.
	If you were to look at myArray(1), you'd find it's equal to 5. If you were to look at myArray(5), you'd find it equal to 9. In FreeBASIC, you can for the most part treat arrays with indexes the same as you would all [[DtVariables Variables]].
	
	Arrays are available based on the rules of {{fbdoc item="keyword" value="ProPgVariableScope|Variable Scope"}}. Depending on the Scope of a variable, an array you define can be available within the main area of a program, within a {{fbdoc item="keyword" value="KeyPgSub|SUB"}} or {{fbdoc item="keyword" value="KeyPgFunction|FUNCTION"}}, or anywhere within your program.. 

{{fbdoc item="ex"}}
%%(qbasic)
DECLARE SUB PrintArray()

DIM Numbers(1 to 10) AS INTEGER
DIM SHARED OtherNumbers(1 to 10) as INTEGER

Numbers(1) = 1
Numbers(2) = 2
OtherNumbers(1) = 3
OtherNumbers(2) = 4

PrintArray ()

for a = 1 to 10
 print Numbers(a)
next a

print OtherNumbers(1)
print OtherNumbers(2)
print OtherNumbers(3)
print OtherNumbers(4)
print OtherNumbers(5)
print OtherNumbers(6)
print OtherNumbers(7)
print OtherNumbers(8)
print OtherNumbers(9)
print OtherNumbers(10)

SUB PrintArray ()
 dim a as integer
 for a = 1 to 10
  print otherNumbers(a)
 next a
END SUB

%%

{{fbdoc item="see"}}
	- [[ProPgArrayIndex Array Index]]
	- [[ProPgVariableScope Variable Scope]]
	- [[KeyPgDim DIM]]
	- [[KeyPgRedim REDIM]]

{{fbdoc item="back" value="DocToc|Table of Contents"}}