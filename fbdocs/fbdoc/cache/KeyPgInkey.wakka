{{fbdoc item="title" value="INKEY"}}----
Returns a string representing the first key waiting in the keyboard buffer.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Inkey** ( ) [[KeyPgAs as]] [[KeyPgStringtype string]]
##
{{fbdoc item="usage"}}##
	//result// = **Inkey**
##
{{fbdoc item="ret"}}
	The first character found in the keyboard buffer, or the null string (##"####"##) if none found.

{{fbdoc item="desc"}}
	Peeks into the keyboard buffer and returns a ##[[KeyPgString String]]## representation of the first character, if any, found. The key is then removed from the buffer, and is not echoed to the screen. If the keyboard buffer is empty, the NULL string (##"####"##) is immediately returned without waiting for keys.

	If the key is in the ASCII character set, a one-character ##[[KeyPgString String]]## consisting of that character is returned. If the key is an "extended" one (numeric pad, cursors, functions) a two-character ##[[KeyPgString String]]## is returned, the first of which is ##[[KeyPgChr Chr]](255)##.

	The ""Shift"", ""Ctrl"", ""Alt"", and ""AltGr"" keys can't be read independently by this function as they never enter the keyboard buffer (although, perhaps obviously, Shift-A will be reported by ##**Inkey**## differently than Control-A et cetera; Alt-A is an extended key a la the above).
	
	To wait for a keypress ##**Inkey**## can be polled in a loop. See also ##[[KeyPgInputnum Input]]## or ##[[KeyPgGetkey Getkey]]##.

{{fbdoc item="ex"}}
%%(qbasic)
print "press q to quit"
do
loop until inkey = "q"
%%

{{fbdoc item="diff"}}
	- QBasic returned a ##Chr(0)## as the first character for an extended key, but FreeBASIC returns ##Chr(255)## as the first character.

{{fbdoc item="see"}}
	- ##[[KeyPgGetkey Getkey]]##
	- ##[[KeyPgInputnum Input()]]##
	- ##[[KeyPgMultikey Multikey]]##

{{fbdoc item="back" value="CatPgInput|User Input"}}