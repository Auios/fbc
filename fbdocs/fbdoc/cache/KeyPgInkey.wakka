{{fbdoc item="title" value="INKEY$"}}----
Returns a string representing the first key waiting the keyboard buffer.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Inkey** ( ) [[KeyPgAs as]] [[KeyPgStringtype string]]
##
{{fbdoc item="usage"}}##
	//result// = **Inkey**[$]
##
{{fbdoc item="ret"}}
	The character (or characters) returned.

{{fbdoc item="desc"}}
	Returns a string representing the first key waiting the keyboard buffer. The key is then removed from the buffer. If no key is waiting, INKEY$ returns an empty string.

	If the key  is an "extended" one (numeric pad, cursors, functions) it returns two characters: the first one is ##[[KeyPgChr Chr]]##(255).

	##**Inkey**## does not stop the program if no key is available. For a keyword that waits for a key, see ##[[KeyPgInputnum Input()]]## or ##[[KeyPgGetkey Getkey]]## or poll ##**Inkey**## in a loop.

	The ""Shift"", ""Ctrl"", ""Alt"", and ""AltGr"" keys can't be read independently by this function as they never enter the keyboard buffer (although, perhaps obviously, Shift-A will reported by Inkey differently than Control-A et cetera; and Alt-A is an extended key a la the above).
	
	The key read is not echoed to the console.

{{fbdoc item="ex"}}
%%(qbasic)
print "press q to quit"
do
loop until inkey$ = "q"
%%

{{fbdoc item="diff"}}
	- QBasic returned a CHR$(0) as the first character for an extended key, but FreeBASIC returns CHR$(255) as the first character.

{{fbdoc item="see"}}
	- ##[[KeyPgGetkey Getkey]]##
	- ##[[KeyPgInputnum Input()]]##
	- ##[[KeyPgMultikey Multikey]]##

{{fbdoc item="back" value="CatPgInput|User Input"}}