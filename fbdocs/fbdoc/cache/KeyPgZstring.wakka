{{fbdoc item="title" value="ZSTRING"}}----
Standard data type: 8 bit character string

{{fbdoc item="syntax"}}##
	[[KeyPgDim dim]] //variable// [[KeyPgAs as]] **Zstring** * //size//
	[[KeyPgDim dim]] //variable// [[KeyPgAs as]] **Zstring** [[KeyPgPtr ptr]]
##
{{fbdoc item="desc"}}
	A ##**Zstring**## is a C-style fixed-size array of chars.  It has no descriptor so it's faster to pass it as an argument to functions. FB avoids any overflow that could occur, by truncating the contents.

	A ##**Zstring**## [[KeyPgPtr ptr]] can point to a standard ##**Zstring**##, also can be used to implement an "user-managed" ##**Zstring**##, in this case ##[[KeyPgAllocate Allocate]]##/##[[KeyPgReallocate Reallocate]]##/##[[KeyPgDeallocate Deallocate]]## must be used to size-resize-dispose it and is up  to the user to avoid overflows . 
	
	The end of the string is marked by a character 0 ASCII, this is automatically managed by the FB string handling functions. A character 0 ASCII must never enter in the text of a ##**Zstring**## or it will be truncated, as no descriptor exists . 
	
	In a ##**Zstring**##, ##[[KeyPgLen Len]]## returns the size of the contained string and ##[[KeyPgSizeof Sizeof]]## returns the space allocated to the ##**Zstring**##.
	
	This type is provided for easy interfacing with C libraries and to also replace the fixed-length strings, that can't be managed thru pointers. Any intrinsic string functions like ##[[KeyPgLeft Left]]## will work with ##**Zstring**##'s too, plus any string operator.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/datatype/zstring.bas"}}%%(freebasic)
dim as zstring * 14 str1 => "hello, world"
print str1
print len(str1)    'returns 12, the size of the string it contains 
print sizeof(str1) 'returns 14, the size of the variable
%%

{{fbdoc item="filename" value="examples/manual/datatype/zstring2.bas"}}%%(freebasic)
dim as zstring ptr str2
str2 = allocate( 14 )
*str2 = "hello, world"
print *str2
print len(*str2)      'returns 12, the size of the string it contains 
print sizeof(*str2)  'returns len(zstring), the size of the variable
%%

{{fbdoc item="diff"}}
	- New to FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgString String]]##
	- ##[[KeyPgWstring Wstring]]##

{{fbdoc item="back" value="CatPgStdDataTypes|Standard Data Types"}}