{{fbdoc item="title" value="ALPHA"}}----
Parameter to the ##[[KeyPgPutgraphics Put]]## graphics statement which selects alpha blending as the method

{{fbdoc item="syntax"}}##
	**Put** [ //target//, ] [ STEP ] ( //x//,//y// ), //source// [ ,( //x1//,//y1// )-( //x2//,//y2// ) ], **Alpha**
	**Put** [ //target//, ] [ STEP ] ( //x//,//y// ), //source// [ ,( //x1//,//y1// )-( //x2//,//y2// ) ], **Alpha**, //alphaval//
##
{{fbdoc item="param"}}
	##**Alpha**##
		Required.
	##//alphaval//##
		Optional alpha parameter in the range [0..255].  Overrides alpha values in individual pixels.

{{fbdoc item="desc"}}
	##Alpha## selects alpha blending as the method for ##[[KeyPgPutgraphics Put]]##ting an image.  If the ##//alphaval//## parameter is specified, it overrides the alpha value of each pixel, and the mask color (magenta) will be treated as transparent.  This works in 15, 16, 24, or 32-bit color depths.  If ##//alphaval//## is not specified, ##Alpha## will only work in 32-bit color depth, and ##[[KeyPgPutgraphics Put]]## will use the alpha value embedded within each pixel.  Pixels using the mask color will be treated as normal, and drawn with their given alpha value.

{{fbdoc item="ex"}}
	%%(qbasic)
''set up a 32-bit screen
screenres 320, 200, 32

'' Draw checkered background
for y as integer = 0 to 199
	for x as integer = 0 to 319
	    pset (x, y), iif((x \ 4 xor y \ 4) and 1, rgb(160, 160, 160), rgb(128, 128, 128))
	next x
next y

'' Make image sprite for Putting
dim img as any ptr = imagecreate(32, 32, rgba(0, 0, 0, 0))
for y as single = -15.5 to 15.5
	for x as single = -15.5 to 15.5
	    dim as integer r, g, b, a
	    if y <= 0 then
	        if x <= 0 then
	            r = 255: g = 0: b = 0   '' red
	        else
	            r = 0: g = 0: b = 255   '' blue
	        end if
	    else
	        if x <= 0 then
	            r = 0: g = 255: b = 0   '' green
	        else
	            r = 255: g = 0: b = 255 '' magenta (transparent mask color)
	        end if
	    end if
	    a = 255 - (x ^ 2 + y ^ 2)
	    if a < 0 then a = 0': r = 255: g = 0: b = 255
	    pset img, (15.5 + x, 15.5 - y), rgba(r, g, b, a)
	next x
next y

'' Put with single Alpha value, Trans for comparison
draw string (32, 10), "Single alpha"
put (80 - 16,  50 - 16), img, alpha, 64
put (80 - 16, 100 - 16), img, alpha, 192
put (80 - 16, 150 - 16), img, trans

'' Put with full Alpha channel
draw string (200, 10), "Full alpha"
put (240 - 16, 100 - 16), img, alpha

'' free the image memory
imagedestroy img

'' wait for a keypress
sleep
%%
{{image class="center" title="Put Alpha example output" url="http://img109.imageshack.us/img109/6937/putalphaexamplerz9.png" link="http://img109.imageshack.us/my.php?image=putalphaexamplerz9.png"}}

{{fbdoc item="diff"}}
	- New to Freebasic

{{fbdoc item="see"}}
	- ##[[KeyPgPutgraphics Put (Graphics)]]##
	
{{fbdoc item="back" value="CatPgGfx2D|2D Drawing Functions"}}