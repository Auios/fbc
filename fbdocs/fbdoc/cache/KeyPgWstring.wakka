{{fbdoc item="title" value="WSTRING"}}
----
Standard data type: 16 bit character string

{{fbdoc item="syntax"}}##
	[[KeyPgDim dim]] //variable// [[KeyPgAs as]] **Wstring** * //size//
	[[KeyPgDim dim]] //variable// [[KeyPgAs as]] **Wstring** [[KeyPgPtr ptr]]
##
{{fbdoc item="desc"}}
	A ##**Wstring**## is a fixed-size array of wide-chars that never overflows if the size is known at compile-time. It has no descriptor, and does never resize unless it's a pointer and ##[[KeyPgAllocate Allocate]]##/##[[KeyPgReallocate Reallocate]]##/##[[KeyPgDeallocate Deallocate]]## are used directly.

	The end of the string is marked by the character 0, so that character must never be part of a ##**Wstring**## or the content will be truncated.  

	This type is provided for support non-latin based alphabets. Any intrinsic string functions like ##[[KeyPgLeft Left]]## will work with ##**Wstring**##'s too, plus any string operator.

	Besides ASCII files with Unicode escape sequences (\u), FreeBASIC can parse UTF-8, UTF-16LE, UTF-16BE, UTF-32LE and UTF-32BE source files.

{{fbdoc item="ex"}}
%%(qbasic)
dim as wstring * 14 str1 => "hello, world"
print str1
print len(str1)    'returns 12, the size of the string it contains 
print sizeof(str1) 'returns 14 * len(wstring), the size of the variable
%%

%%(qbasic)
dim as wstring ptr str2
str2 = allocate( 14 * len(wstring) )
*str2 = "hello, world"
print *str2
print len(*str2)      'returns 12, the size of the string it contains 
print sizeof(*str2)  'returns len(wstring), the size of the variable
%%

{{fbdoc item="diff"}}
	- New to FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgStringtype String]]##
	- ##[[KeyPgZstring Zstring]]##

	- ##[[KeyPgFunWstring Wstring (Function)]]## (function)
	- ##[[KeyPgWspace Wspace]]##
	- ##[[KeyPgWstr Wstr]]##
	- ##[[KeyPgWchr Wchr]]##
	- ##[[KeyPgWbin Wbin]]##
	- ##[[KeyPgWoct Woct]]##
	- ##[[KeyPgWhex Whex]]##
	- ##[[KeyPgWinput Winput()]]##

{{fbdoc item="back" value="CatPgStdDataTypes|Standard Data Types"}}

