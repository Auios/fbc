{{fbdoc item="title" value="ENUM"}}----
Declares an enumerated type

{{fbdoc item="syntax"}}##
	**Enum** [//typename//]
		//symbolname// [= //expression//] [, ...]
		...
	End Enum
##
{{fbdoc item="param"}}
	##//typename//##
		Name of the ##**Enum**##
	##//symbolname//##
		Name of the constant
	##//expression//##
		A constant expression

{{fbdoc item="desc"}}
	##**Enum**##, short for enumeration, declares a list of symbol names that correspond to discrete values. If no initial value is given, the first item will be set to 0.  Each subsequent symbol has a value one more than the previous unless ##//expression//## is given.

	Symbols may be each on their own line, or separated on a single line by commas.

	An ##**Enum**## can be passed as a user defined type to overloaded operator functions.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/udt/enum.bas"}}%%(freebasic)
enum MyEnum
	option1 = 1
	option2
	option3
end enum

dim MyVar as MyEnum

MyVar = option1

select case MyVar
	case option1
		print "Option 1"
	case option2
		print "Option 2"
	case option3
		print "Option 3"
end select
%%

{{fbdoc item="lang"}}
	- Not available in the //[[ProPgCompOptlang -lang qb]]// dialect.

{{fbdoc item="diff"}}
	- New to FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgConst Const]]##
	- ##[[KeyPgOperator Operator]]##

{{fbdoc item="back" value="CatPgUserDefTypes|User Defined Types"}}