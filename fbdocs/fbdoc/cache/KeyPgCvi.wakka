{{fbdoc item="title" value="CVI"}}----
Converts an four byte string to an integer variable

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Cvi** ( [[KeyPgByref byref]] //str// [[KeyPgAs as]] [[KeyPgString string]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//result// = **Cvi**( //str// )
##
{{fbdoc item="param"}}
	##//str//##
		A [[KeyPgString string]] exactly four bytes in length with a binary copy of an integer variable stored in it.

{{fbdoc item="ret"}}
	An [[KeyPgInteger integer]] variable to copy the binary copy of a integer to.

{{fbdoc item="desc"}}
	Returns a 32 bit ##[[KeyPgInteger Integer]]## value using the binary data contained in a string that is **exactly** four bytes in length.  An integer value of zero (0) is returned if the string is not extactly four bytes in length.

	##**Cvi**## is used to convert 4-byte-strings created with ##[[KeyPgMki Mki]]##.

	This function can also be used to convert 32 bit integer values from a memory or file buffer without the need for a ##[[KeyPgType ]]## structure.  However, just as with the type structure, special care should be taken when using ##**Cvi**## to convert strings that have been read from a buffer.  The ##[[KeyPgCvi Cvi]]## and ##[[KeyPgMki Mki]]## functions are processor dependent.  That is, they will return different results depending on the endianness of the processor.

{{fbdoc item="ex"}}
%%(qbasic)dim a as integer, b as string
a=4534
b=mki(a)
print a, cvi(b)
sleep
%%

{{fbdoc item="diff"}}
	- In QB, ##**Cvi**## expects a 2-byte-string, since a QB integer is only 16 bits.
	- In QB, an error occurs if the string passed is less than two bytes in length.
	- In QB, only the first two bytes of the string are used even if the string happens to be longer than two bytes.

{{fbdoc item="see"}}
	- ##[[KeyPgMki Mki]]##

{{fbdoc item="back" value="CatPgString|String Functions"}}