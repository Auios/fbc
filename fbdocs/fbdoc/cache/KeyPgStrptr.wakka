{{fbdoc item="title" value="STRPTR"}}----
Returns a pointer to a string variable's data

{{fbdoc item="syntax"}}##
	//result// = **Strptr** ( //string_variable// )
##
{{fbdoc item="desc"}}
	Returns a C-compatible ##[[KeyPgZstring Zstring]]##.  Strptr is the proper method for aquiring the [[DtPointers pointer]] to the data portion of a string variable.

	The related ##[[KeyPgVarptr Varptr]]## function (and the abbreviated form, @), when used with a string, returns a pointer to the internal string descriptor.

{{fbdoc item="ex"}}
%%(qbasic)
' This example uses Strptr to demonstrate using pointers with strings
Dim myString as String
Dim toMyString as ZString Ptr

' Note that using standard VARPTR notation will return a pointer to the descriptor, not the string data itself
myString = "Improper method for Strings"
toMyString = @myString
print myString
print *toMyString
print

' However, using Strptr returns the proper pointer
myString = "Hello World Examples Are Silly"
toMyString = Strptr(myString)
print myString
print *toMyString
print

' And the pointer acts like pointers to other types
myString = "MyString has now changed"
print myString
print *toMyString
print
%%

{{fbdoc item="see"}}
	- ##[[KeyPgStringtype String]]##
	- ##[[KeyPgSadd Sadd]]##
	- ##[[KeyPgVarptr Varptr]]##
	- [[DtPointers Pointers]]

{{fbdoc item="back" value="CatPgCasting|Converting Data Types"}}