{{fbdoc item="title" value="OPEN PIPE"}}----
Opens a sub process and allows input to be read from or output to be written to the sub process

{{fbdoc item="syntax"}}##
	**Open Pipe** //command// [[KeyPgAs as]] [[KeyPgString string]] for {[[KeyPgInputfilemode input]] | [[KeyPgOutput output]]} [[KeyPgAs as]] [#]//filenum//
	**Open Pipe** //command// [[KeyPgAs as]] [[KeyPgString string]] for [[KeyPgBinary binary]] [[KeyPgAccess access]] {[[KeyPgReadFile read]] | [[KeyPgWriteFile write]]} [#]//filenum//
##
{{fbdoc item="usage"}}##
	**Open Pipe** //command// for input as #//filenum//
	**Open Pipe** //command// for output as #//filenum//
	**Open Pipe** //command// for binary access read as #//filenum//
	**Open Pipe** //command// for binary access write as #//filenum//
	//result// = **Open Pipe**( //command// ... )
##
{{fbdoc item="param"}}
	##//command//##
		the sub-process to execute in the operating systems command shell.
	##FOR {INPUT | OUTPUT}##
		opens the pipe in text mode for input (reading) or output (writing)
	##FOR BINARY ACCESS {READ | WRITE}##
		opens the pipe in binary mode for input (reading) or output (writing)
	##//filenum//##
		the unused file number to associate with the opened pipe on success

{{fbdoc item="ret"}}
	When used as function, OPEN PIPE returns zero (0) on sucess and a non-zero errorcode otherwise.

{{fbdoc item="desc"}}
	This statement opens a sub-process by running ##//command//## in the operating system's shell.  The output of the sub-process can be read back to the program using standard file commands such as ##[[KeyPgLineinputPp Line Input #]]##.  Input to the sub-process can be supplied using standard file commands such as ##[[KeyPgPrintPp Print #]]##.  ##**Open Pipe**## is uni-directional: the stream of data can only flow one way, either from the program to the sub-process, or from the sub-process to the program.

	##//command//## specifies the sub-process to execute and must use the standard devices stdin / stdout for its input / output.

	##FOR INPUT## allows the program to read the output (stdout) of the sub-process as a text stream
	##FOR OUTPUT## allows the program to send data as input (stdin) to the sub-process as a text stream
	##BINARY ACCESS READ## allows the program to read the output (stdout) of the sub-process as a binary stream
	##BINARY ACCESS WRITE## allows the program to send data as input (stdin) to the sub-process as a binary stream

	BINARY streams are not supported on all implementations of the C run time library.  ##**Open Pipe**## returns with an error if it is unable to open a binary stream.

	##//filenum//## is an unsed file number.

{{fbdoc item="ex"}}
%%(qbasic)dim text as string
open pipe "fbc.exe" for input as #1
print "Output of fbc:"
do while not eof(1)
   line input #1, text
   print text
loop
%%

{{fbdoc item="diff"}}
	- New to FreeBasic

{{fbdoc item="see"}}
	- ##[[KeyPgOpen Open]]##
	- ##[[KeyPgOpen Close]]##

{{fbdoc item="back" value="CatPgFile|File I/O Functions"}}