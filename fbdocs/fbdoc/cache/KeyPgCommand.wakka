{{fbdoc item="title" value="COMMAND"}}----
Returns command line parameters used to call the program.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Command** ( [[KeyPgByval byval]] //index// [[KeyPgAs as]] [[KeyPgInteger integer]] = -1 ) [[KeyPgAs as]] [[KeyPgStringtype string]]
##
{{fbdoc item="usage"}}##
	//result// = **Command**[$]( [ //index// ] )
##
{{fbdoc item="param"}}
	##//index//##
		Zero-based index for a particular command-line argument.
{{fbdoc item="ret"}}
	  Returns the command-line arguments(s).

{{fbdoc item="desc"}}
	##**Command**## returns a space-seperated list of the command-line arguments passed to the program when executed.

	If ##//index//## is specified, a single argument is returned. A value of zero (0) returns the name of the executable; and values of one (1) and greater return each command-line argument.
	
	If ##//index//## is greater than the number of arguments on the command line, the null string (##"####"##) is returned.

	When the command line is parsed for arguments, everthing between double quotes in the parameter list will be considered as a single parameter, and is returned with the double quotes.

	By default, filename globbing for arguments (expansion of wildcards to filenames) is used on all ports of FreeBASIC for compatibility.  Arguments on the commandline containing wildcards are typically not expanded if when no file is matched or if properly quoted.  Other special characters for rediection are typically not returned unless properly quoted.  Consult the documentation on the shell being used for more information on the proper quoting of command line arguments.

~&//**WARNING**: By nature of FreeBASIC's constructor precedence and main() intialization, calling ##**Command**## within a global constructor is not safe. At the moment your app will not crash, but you will only recieve the null string (##"####"##). This *may* be able to be fixed in the future, but it would be wise not to rely on that.//

	__Disabling filename globbing under Win32__
		For mingw32 and cygwin builds, link the FreeBASIC program with CRT_noglob.o or define the following somewhere in the source:
		%%(qbasic)
extern _CRT_glob alias "_CRT_glob" as integer
dim shared _CRT_glob as integer = 0
%%

	__Disabling filename globbing under Dos__
		Define the following function somewhere in the source:
		%%(qbasic)
public function __crt0_glob_function alias "__crt0_glob_function" ( byval arg as ubyte ptr ) as ubyte ptr ptr
  return 0
end function
%%

	__Disabling filename globbing under Linux__
		Filename globbing is handled by the command shell.  Quote the argument containing wildcards or disable filename globbing in the shell prior to executing the command.  For example in bash use 'set -f' to disable wildcard expansion

{{fbdoc item="ex"}}
%%(qbasic)
''
'' command-line arguments example
''

 	print "exe name= "; command( 0 )

 	dim argc as integer, argv as string

 	argc = 1
 	do
 		argv = command( argc )

 		if( len( argv ) = 0 ) then
 			exit do
 		end if

 		print "arg"; argc; " = """; argv; """"

 		argc += 1
 	loop

 	if( argc = 1 ) then
 		print "(no arguments)"
 	end if
 	print "The complete list: ";command
%%

{{fbdoc item="diff"}}
	- The numeric argument was not supported in QB.
	- QB converted  the parameter list to uppercase before returning it.
	- by default arguments containing wildcard characters are expanded (filename globbing)

{{fbdoc item="see"}}
	- ##[[KeyPgExec Exec]]##
	- ##[[KeyPgRun Run]]##

{{fbdoc item="back" value="CatPgOpsys|Operating System Functions"}}