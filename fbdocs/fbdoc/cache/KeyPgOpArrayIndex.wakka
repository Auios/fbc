{{fbdoc item="title" value="Operator () (Array index)"}}----
Returns a reference to an element in an array

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **()** ( //lhs//() [[KeyPgAs as]] //T//, [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgInteger integer]], ... ) [[KeyPgAs as]] //T//
##
~&//Note that **##Operator ()## (Array index)** returns a reference. As of 02.27.07, ""FreeBASIC"" syntax does not support returning references. When it does, this syntax will need to be changed.//

{{fbdoc item="usage"}}##
	//result// = //lhs// **(** //rhs// [, ...] **)**
##
{{fbdoc item="param"}}
	//lhs//
		An array.
	//rhs//
		An index of an element in the array.
	//T//
		Any data type.

{{fbdoc item="desc"}}
	This operator returns a reference to an element in an array. For multidimensional arrays, multiple indexes must be specified (up to the total number of dimensions of the array).

	For any one dimension //d// in array //a//, any index outside of the range (##[[KeyPgLbound Lbound]](//a//(), //d//), [[KeyPgUbound Ubound]](//a//(), //d//)##) will result in a runtime error.

{{fbdoc item="ex"}}

{{fbdoc item="filename" value="examples/manual/operator/arrayindex.bas"}}%%(freebasic)
dim array(4) as integer = { 0, 1, 2, 3, 4 }

for index as integer = 0 to 4
	print array(index)
next
%%
	will produce the output:

%%
	0 1 2 3 4
%%

{{fbdoc item="diff"}}
	- None

{{fbdoc item="see"}}
	- ##{{fbdoc item="keyword" value="KeyPgOpStringIndex|Operator [] (String index)"}}##
	- ##{{fbdoc item="keyword" value="KeyPgOpPtrIndex|Operator [] (Pointer index)"}}##

{{fbdoc item="back" value="CatPgOperators|Operators"}}