{{fbdoc item="title" value="THREADWAIT"}}
----
**Threadwait** waits until the designated thread has been completed before returning.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgSub sub]] **Threadwait** ( [[KeyPgByval byval]] //id// [[KeyPgAs as]] [[KeyPgInteger integer]] )
##
{{fbdoc item="usage"}}##
	**Threadwait** ( //id// )
##
{{fbdoc item="param"}}
	##//id//##
	    [[KeyPgInteger integer]] handle of a thread created by ##[[KeyPgThreadCreate Threadcreate]]##

{{fbdoc item="desc"}}
	**Threadwait** doesn't return until the tread designed by ##//id//## ends. **Threadwait** does not force the thread to end; If a thread requires a signal to force it's end, a mechanism such as shared variables must be used.

	NOTE: The DOS version of FreeBasic does not allow for threads, as the OS does not support them.

	Threads are launched by the ##[[KeyPgThreadCreate Threadcreate]]## function.

	To avoid different threads simultaneous access to shared resources, FB implements Mutexes, flags that can be "owned" by a single thread when doing a critical work. See ##[[KeyPgMutexCreate Mutexcreate]]##, ##[[KeyPgMutexLock Mutexlock]]##, ##[[KeyPgMutexUnlock Mutexunlock]]##, ##[[KeyPgMutexDestroy Mutexdestroy]]##



{{fbdoc item="ex"}}
%%(qbasic)
dim shared printsync as integer

sub mythread(byval id as integer)

  dim as double t, w
  dim as integer i, n

  if( id = 1 ) then
	w = 1
	n = 10
  else
	w = 0.3
	n = 5
  end if

  for i = 1 to n

	mutexlock printsync
	print "Thread #"; id; ": on step #"; i
	mutexunlock printsync

	'' simulate some work
	t = timer
	while( timer - t ) < w
	wend

  next i

  mutexlock printsync
  print "Thread #"; id; " is done "
  mutexunlock printsync

end sub

print "Starting threads ... "

'' create a mutex to sync printing
printsync = MutexCreate()

'' create 2 threads, each taking a different
'' amount of time to complete
t1 = threadcreate( @mythread, 1 )
t2 = threadcreate( @mythread, 2 )

'' wait for threads to complete
threadwait( t1 )
threadwait( t2 )

mutexdestroy printsync

print "All done."
%%


{{fbdoc item="diff"}}
	- New to Freebasic


{{fbdoc item="see"}}
	- ##[[KeyPgThreadCreate Threadcreate]]##
	- ##[[KeyPgMutexCreate Mutexcreate]]##
	- ##[[KeyPgMutexLock Mutexlock]]##
	- ##[[KeyPgMutexUnlock Mutexunlock]]##
	- ##[[KeyPgMutexDestroy Mutexdestroy]]##

{{fbdoc item="back" value="CatPgThreading|THREADING"}}{{fbdoc item="back" value="CatPgFullIndex|Alphabetical Keywords List"}}