{{fbdoc item="title" value="BITRESET"}}----
Macro that clears a bit in an integer

{{fbdoc item="syntax"}}##
	[[KeyPgPpdefine #define]] **Bitreset**( //value//, //bit_number// ) ((//value//) [[KeyPgOpAnd and]] [[KeyPgOpNot not]] ([[KeyPgCast Cast]]([[KeyPgTypeof TypeOf]](//Value//), 1) [[KeyPgOpShiftLeft shl]] (//bit_number//)))
##
{{fbdoc item="usage"}}##
	//result// = **Bitreset**(//value//, //bit_number//)
##
{{fbdoc item="param"}}
	##//value//##
		The integer value to clear a bit in.  It is not modified.
	##//bit_number//##
		The zero-based number of the bit to clear; 0 is the least-significant bit.

{{fbdoc item="ret"}}
	##//value//## with bit ##//bit_number//## cleared.

{{fbdoc item="desc"}}
	Macro returning ##//value//## with the bit ##//bit_number//## reset to 0.
	##foo = **Bitreset**( bar, 5 )##  does the same as ##foo = bar and not (1 shl 5)##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/bits/bitreset.bas"}}%%(freebasic)
print bitreset(5,0)
print hex(bitreset(&h8000000000000001,63))
%%
	will produce the output:

%% 4
1
%%

{{fbdoc item="diff"}}
	- New to FreeBasic.

{{fbdoc item="see"}}
	- ##[[KeyPgBit Bit]]##
	- ##[[KeyPgBitset Bitset]]##
	
{{fbdoc item="back" value="CatPgBits|Bit Manipulation"}}