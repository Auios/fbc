{{fbdoc item="title" value="ABS"}}
----
Function that calculates the absolute value of a number.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Abs** [[KeyPgOverload overload]] ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Abs** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgLongint longint]] ) [[KeyPgAs as]] [[KeyPgLongint longint]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Abs** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgDouble double]] ) [[KeyPgAs as]] [[KeyPgDouble double]]
##
{{fbdoc item="usage"}}##
	result = **Abs**( //number// )
##
{{fbdoc item="param"}}
	##//number//##
		Value to find the absolute value of.

{{fbdoc item="ret"}}
	The absolute value of ##//number//##.

{{fbdoc item="desc"}}
	The absolute value of a number is its unsigned magnitude. For example, ##Abs(-1)## and ##Abs(1)## both return ##1##. The required ##//number//## argument can be any valid numeric expression. ##Abs## returns its value as the same data type as the argument ##//number//##.

{{fbdoc item="ex"}}
##%%(qbasic)
dim n as integer

print Abs( -1 )
print Abs( -3.1415 )
print Abs( 42 )
print Abs( n )

n = -69

print Abs( n )
%%##

The output would look like:
##%%(qbasic)
1
3.1415
42
0
69
%%##

{{fbdoc item="diff"}}
	- None

{{fbdoc item="see"}}
	- ##[[KeyPgSgn Sgn]]##


{{fbdoc item="back" value="CatPgOperators|Operators"}}