{{fbdoc item="title" value="WBIN"}}----
Returns the binary wstring (unicode) representation of the integer //number//.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** [[KeyPgOverload overload]] ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgByte byte]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgByte byte]], [[KeyPgByval byval]] //digits// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]

	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgShort short]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgShort short]], [[KeyPgByval byval]] //digits// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]

	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByval byval]] //digits// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]

	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgLongint longint]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgLongint longint]], [[KeyPgByval byval]] //digits// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]
##
{{fbdoc item="usage"}}##
	//result// = **Wbin**( //number// [, //digits//] )
##
{{fbdoc item="param"}}
	##//number//##
		A whole number or expression evaluating to a whole number.
	##//digits//##
		Optional number of digits to return.

{{fbdoc item="ret"}}
	Returns a binary [[KeyPgStringtype string]] representation of //number//.

{{fbdoc item="desc"}}
	Returns a ##[[KeyPgWstring wstring]}## (Unicode) representing the binary value of the integer ##//expression//##. Binary digits range from 0 to 1.

	If you specify ##//digits//## > 0, the result wstring will be exactly that length.  It will be truncated or padded with zeros on the left, if necessary.

	The length of the ##[[KeyPgWstring wstring]}## will not go longer than the maximum number of digits required for the type of ##//expression//## (32 for an integer, 64 for floating point or longint)

{{fbdoc item="ex"}}
%%(qbasic)
PRINT WBIN(54321)
PRINT WBIN(54321, 5)
PRINT WBIN(54321, 20)
%%
	will produce the output:

%%1101010000110001
10001
00001101010000110001
%%
{{fbdoc item="target"}}
	- Unicode (w)strings are not suported in the DOS port of FB

{{fbdoc item="diff"}}
	- New to FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgBin Bin]]##
	- ##[[KeyPgWhex Whex]]##
	- ##[[KeyPgWoct Woct]]##

{{fbdoc item="back" value="CatPgString|String Functions"}}