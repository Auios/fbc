{{fbdoc item="title" value="CULNGINT"}}----
Converts numeric or string expression to 64-bit unsigned integer (##[[KeyPgUlongint Ulongint]]##)

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Culngint** ( [[KeyPgByval byval]] //expression// [[KeyPgAs as]] [[DataType datatype]] ) [[KeyPgAs as]] [[KeyPgUlongint ulongint]]

	[[KeyPgType Type]] //typename//
		[[KeyPgDeclare declare]] [[KeyPgOperator operator]] [[KeyPgCast cast]] ( ) [[KeyPgAs as]] [[KeyPgUlongint ulongint]]
	End Type
##
{{fbdoc item="usage"}}##
	//result// = **Culngint**( //numeric expression// )
	//result// = **Culngint**( //string expression// )
	//result// = **Culngint**( //user defined type// )
##
{{fbdoc item="param"}}
	##//expression//##
		a numeric, string, or pointer expression to cast to a ##[[KeyPgUlongint Ulongint]]## value
	##//datatype//##
		any numeric, string, or pointer data type
	##//typename//##
		a user defined type

{{fbdoc item="ret"}}
	A ##[[KeyPgUlongint Ulongint]]## value.

{{fbdoc item="desc"}}
	The ##**Culngint**## function rounds off the decimal part and returns a 64 bit ##[[KeyPgUlongint Ulongint]]## value. The function does not check for an overflow, so be sure not to pas a value thats less/larger than 0 to 18 446 744 073 709 551 615. The name can be explained as 'Convert to Unsigned ""LoNG INTeger""'.

	If the argument is a string expression, it is converted to numeric by using ##[[KeyPgValulng Valulng]]##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/casting/culngint.bas"}}%%(freebasic)
' Using the CLNGINT function to convert a numeric value

'Create an UNSIGNED LONG INTEGER variable
DIM numeric_value AS ULONGINT

'Convert a numeric value
numeric_value = CULNGINT(12345678.123)

'Print the result, should return 12345678
PRINT numeric_value
SLEEP
%%

{{fbdoc item="diff"}}
	- New to FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgCbyte Cbyte]]##
	- ##[[KeyPgCubyte Cubyte]]##
	- ##[[KeyPgCshort Cshort]]##
	- ##[[KeyPgCushort Cushort]]##
	- ##[[KeyPgCint Cint]]##
	- ##[[KeyPgCuint Cuint]]##
	- ##[[KeyPgClng Clng]]##
	- ##[[KeyPgCulng Culng]]##
	- ##[[KeyPgClngint Clngint]]##
	- ##[[KeyPgCsng Csng]]##
	- ##[[KeyPgCdbl Cdbl]]##

{{fbdoc item="back" value="CatPgCasting|Converting Data Types"}}