{{fbdoc item="title" value="IMAGECONVERTROW"}}
----
Converts a row of an image buffer into a different bit depth.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgSub sub]] **""ImageConvertRow""** ( [[KeyPgByval byval]] //src// [[KeyPgAs as]] [[KeyPgAny any]]  [[KeyPgPtr ptr]], [[KeyPgByval byval]] //src_bpp// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByval byval]] //dst// [[KeyPgAs as]] [[KeyPgAny any]]  [[KeyPgPtr ptr]], [[KeyPgByval byval]] //dst_bpp// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByval byval]] //width// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByval byval]] //isrgb// [[KeyPgAs as]] [[KeyPgInteger integer]] = 1 )
##
{{fbdoc item="usage"}}##
		""ImageConvertRow""( //src//, //src_bpp//, //dst//, //dst_bpp//, //width// )
			##//or//##
		""ImageConvertRow""( //src//, //src_bpp//, //dst//, //dst_bpp//, //width//, //isrgb// )
			##//or//##
		""ImageConvertRow""( //src//, //src_bpp//, //dst//, //dst_bpp//, //numofpixels//, //isrgb// )	
		
##
{{fbdoc item="param"}}
	##//src//##
		The address of the start of the source row
	##//src_bpp//##
		The number of bits per pixel in the source row
	##//dst//##
		The address of the start of the destination row
	##//src_bpp//##
		The number of bits per pixel in the destination row
	##//width//## or ##//numofpixels//##
		The size of one row in pixels
		 Or number of pixels=(width*height)  to convert a whole picture at once. 
	##//isrgb//##
		A value of zero indicates that the Red and Blue channels are the other way round in one of the rows.
		Use this to make sure the Red and Blue channels are swapped in the conversion.

{{fbdoc item="desc"}}
	Copies the row of an image from one address to another, converting the number of bits per pixel to match the destination image.

{{fbdoc item="ex"}}
##%%(qbasic)option explicit
dim as any ptr img8, img32
dim as integer i, y


'' create a 32-bit image, size 100*100:
screenres 320, 200, 32, , -1
img32 = imagecreate(100, 100)


'' create an 8-bit image, size 100*100:
screenres 320, 200, 8, , -1
img8 = imagecreate(100, 100)

'' spatter some random dots into the image, to make it more interesting:
for i = 1 to 1000
	pset img8, (int(rnd * 100), int(rnd * 100)), int(rnd * 256)
next i

'' open a graphics window in 8-bit mode, and PUT the image into it:
screenres 320, 200, 8
put (10, 10), img8

sleep

'' copy the image data into a 32-bit image
for y = 0 to 99
	imageconvertrow(img8 + (4 + y * 100), 8, _
	                img32 + (4 + y * 100 * 4), _
	                32, 100)
next y

'' open a graphics window in 32-bit and PUT the image into it:
screenres 320, 200, 32
put (10, 10), img32

sleep

'' deallocate the images:
imagedestroy img8
imagedestroy img32%%##

{{fbdoc item="diff"}}
	- New to FB

{{fbdoc item="see"}}
	- ##[[KeyPgScreenRes ScreenRes]]##
	- ##[[KeyPgGetgraphics Get (Graphics)]]##
	- ##[[KeyPgPutgraphics Put (Graphics)]]##
	- ##[[KeyPgImageCreate ImageCreate]]##
	- ##[[KeyPgImageDestroy ImageDestroy]]##

{{fbdoc item="back" value="CatPgGfx|GFX"}}{{fbdoc item="back" value="CatPgFullIndex|Alphabetical Keywords List"}}