{{fbdoc item="title" value="CHAIN"}}----
Runs another FreeBASIC program, and waits until that program ends before resuming execution.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Chain** ( [[KeyPgByref byref]] //exename// [[KeyPgAs as]] [[KeyPgStringtype string]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	CHAIN //"program[.exe]"//
##
{{fbdoc item="param"}}
	##//exename//##
		Name of program to run.

{{fbdoc item="ret"}}
	    The return value is the program's exit code if called successfully, (-1) otherwise.

{{fbdoc item="desc"}}
	Runs another FreeBASIC program and transfers control to that program. After called program has ended the original program will gain the control again.

{{fbdoc item="ex"}}
%%(qbasic)
#ifdef FB__LINUX
#define CHAIN2	"chain2"
#else
#define CHAIN2	"chain2.exe"
#endif

	print "chain1 begins"

	chain CHAIN2

	print "chain1 ends"

	sleep
%%
{{fbdoc item="target"}}
	- Linux requires the //exename// case matches the real name of the file. Windows and DOS  are case insensitive. The program  chained may be case sensitive for its command line parameters.
	- Path separators in Linux are forward slashes / . Windows uses backward slashes \ but it allows for forward slashes .  DOS uses backward  \ slashes. 


{{fbdoc item="diff"}}
	-

{{fbdoc item="see"}}
	- ##[[KeyPgRun Run]]##

{{fbdoc item="back" value="CatPgOpsys|Operating System Functions"}}