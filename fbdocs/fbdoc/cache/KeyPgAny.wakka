{{fbdoc item="title" value="ANY"}}
----
Pseudo-data type that turns off type checking for a parameter.

{{fbdoc item="syntax"}}##
	//identifier// [[KeyPgAs as]] **Any** [[KeyPgPtr ptr]]

	[[KeyPgDeclare declare]] { [[KeyPgSub sub]] | [[KeyPgFunction function]] } //identifier// ( [ ..., ] [[KeyPgByref byref]] //identifier// [[KeyPgAs as]] **Any** [ , ... ] )
##
{{fbdoc item="usage"}}##
	dim //identifier// as **Any** ptr
		##//Or//##
	declare sub //identifier// ( byref //identifier// as **Any** )
		##//Or//##
	declare sub //identifier// ( [ byval | byref ] //identifier// as **Any** ptr )
##
{{fbdoc item="desc"}}
	##Any## is a data type which accepts data of any type because no type checking is done.  It is used mainly in pointers to represent an untyped memory address.

	This should not be confused with ##Variant##, a Visual Basic data type which can contain any type of variable, which is not supported by FB.
	
	The only place ##Any## can be used without ##[[KeyPgPtr Ptr]]## is in function prototypes (in a ##[[KeyPgDeclare Declare]]## statement) with ##[[KeyPgByref ByRef]]## arguments, to be compatible with QB.

{{fbdoc item="ex"}}
%%(qbasic)
declare sub echo (byref a as any)
dim x as integer
x = 15
echo x
declare sub echo (byref a as integer)
 print a
end sub
%%

{{fbdoc item="diff"}}
	- Pointers did not exist in QB.

{{fbdoc item="see"}}
	- ##[[KeyPgDim Dim]]##
	- ##[[KeyPgDeclare Declare]]##

{{fbdoc item="back" value="Alphakeywords|Alphabetic list of keywords"}}