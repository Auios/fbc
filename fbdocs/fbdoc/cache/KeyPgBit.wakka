{{fbdoc item="title" value="BIT"}}----
Macro that returns the value of one bit of an integer.

{{fbdoc item="syntax"}}##
	[[KeyPgPpdefine #define]] **BIT**( //value//, //bit_number// ) (((//value//) [[KeyPgAnd and]] (1 [[KeyPgShl shl]] (//bit_number//))) > 0)
##
{{fbdoc item="usage"}}##
	//result// = **BIT**( //value//, //bit_number// )
##
{{fbdoc item="param"}}
	##value##
		Value in which to test the bit.
	##bit_number##
		Zero-based number of the bit to test, where 0 is the least-significant bit.

{{fbdoc item="ret"}}
	""-1"" if bit ##//bit_number//## is set in ##//value//##, else 0.

{{fbdoc item="desc"}}
	##**BIT**## returns -1 if the bit ##//bit_number//## of ##//value//## is 1, returns 0 if bit is 0. ##foo = **BIT**( bar, 10 )##  is the same as ##foo = (bar and 10 shl 10) > 0##.

{{fbdoc item="ex"}}
%%(qbasic)
PRINT BIT(4,2)
%%
##%%
-1
%%##

{{fbdoc item="diff"}}
	- New to FreeBasic 

{{fbdoc item="see"}}
	- ##[[KeyPgBitset BITSET]]##
	- ##[[KeyPgBitreset BITRESET]]##

{{fbdoc item="back" value="CatPgBits|Bit Manipulation"}}