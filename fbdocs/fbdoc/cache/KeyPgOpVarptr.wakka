{{fbdoc item="title" value="Operator VARPTR (Variable pointer)"}}----
Returns the address of a variable or object

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **Varptr** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] //T// ) [[KeyPgAs as]] //T// [[KeyPgPtr ptr]]
##
{{fbdoc item="syntax"}}##
	//result// = **Varptr** ( //lhs// )
##
{{fbdoc item="param"}}
	##//lhs//##
		A variable or object.
	##//T//##
		Any data type.

{{fbdoc item="ret"}}
	Returns the address of a variable or object.

{{fbdoc item="desc"}}
	This operator returns the address of its operand.

	When the operand is of type ##[[KeyPgString String]]##, the address of the internal string descriptor is returned. Use ##[[KeyPgOpStrptr Operator Strptr (String pointer)]]## to retrieve the address of the string data.

	The operand cannot be an array, but may be an array element. For example, "**Varptr**(@myarray(0))" returns the address of "myarray(0)".

{{fbdoc item="ex"}}
%%(qbasic)dim a as integer, addr as integer
a = 10
addr = varptr(a) ' place the address of a in addr
POKE integer, addr, -1000 ' change all 4 bytes (size of INTEGER) of a
print a
addr = @a ' place the address of a in addr (same as above)
print PEEK( addr ) 'print the least or most significant byte, depending on the CPU endianess
%%

{{fbdoc item="diff"}}
	- None

{{fbdoc item="see"}}
	- ##[[KeyPgOpAt Operator @ (Address of)]]##
	- ##[[KeyPgOpValueOf Operator * (Value of)]]##
	- ##[[KeyPgOpStrptr Operator Strptr (String pointer)]]##
	- ##[[KeyPgPoke Peek]]##
	- ##[[KeyPgPoke Poke]]##

{{fbdoc item="back" value="CatPgOperators|Operators"}}