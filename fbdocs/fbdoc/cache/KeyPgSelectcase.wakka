{{fbdoc item="title" value="SELECT CASE"}}
----
{{fbdoc item="syntax"}}
	SELECT CASE //expression//
	[CASE //expressionlist//] 
		[//statements//]
	[CASE ELSE]
		[//statements//]
	END SELECT
	   
	SELECT CASE AS CONST //integerexpression//
	[CASE //constant|enumeration //]
		[//statements//]
	[CASE ELSE]
		[//statements//]
	END SELECT

{{fbdoc item="desc"}}

	Select case executes specific code depending on the value of an expression. If the expression matches the first case then its code is executed otherwise the next cases are compaired and if one case matches then its code is executed. If no cases are matched and there is a 'case else' on the end then it will be executed, otherwise the whole select case block will be skipped. In any case 1 or 0 cases are executed.
	
	For C users: FB's SELECT CASE works as a switch where all cases have a break; at the end. As there is no fall-through, multiple options must be put in an expression list in a single CASE.
	
	END SELECT can be used to exit the SELECT CASE ...END SELECT block
	
	Besides integer types, floating point and strings //expressions// are also supported with the first syntax.  

	Syntax of an expression list:
	{//expression// | //expression// TO //expression// | IS //relational operator// //expression//}[, ...]

	example of expression lists:
	{{table columns="2" cellpadding="1" cells="CASE 1 ;constant;CASE 5.4 TO 10.1;range;CASE IS > 3;bigger than-smaller than;CASE 1, 3, 5, 7, 9;enumeration;CASE x ;value of a variable"}}

	If AS CONST is used, only integer constants in the range 0..4097 can be evaluated and the expression list supports  single constants and enumerations only. Being limited to integer values allows SELECT CASE AS CONST to be faster than SELECT CASE

{{fbdoc item="ex"}}
%%(qbasic)
input "Choose a number between 1 and 10: "; choice
select case as const choice
case 1
	print "number is 1"
case 2
	print "number is 2"
case 3, 4
	print "number is 3 or 4"
case 5 to 10
	print "number is in the range of 5 to 10"
case else
	print "number is outside the 1-10 range"
end select
%%

{{fbdoc item="diff"}}
	- SELECT CASE AS CONST did not exist in QB

{{fbdoc item="see"}}
	- [[KeyPgIfthen IF...THEN]]

{{fbdoc item="back" value="CatPgCompound|Compound Statements"}}