Although FreeBASIC has extremely similar syntax to QuickBASIC, there are subtle differences, so some legacy code may not compile right away. 

==Architecture/Platform incompatibilities==
	- The [[KeyPgInteger INTEGER]] data type is 32 bits, rather than 16 bits in QuickBASIC.
	- FreeBASIC is written for 32-bit operating systems and a 32 bit DOS extender, and cannot utilize code which depends on 16-bit DOS, 16 bit assembly or memory model (segment & offset, XMS, ...). 	
	- DEF SEG is no longer necessary and will not work - any code which POKEs to video memory this way will no longer function, however, for DOS it can be easily rewritten using DPMI features. 
	- CALL INTERRUPT no longer functions, as it relies on 16-bit DOS. DOS interrupts can be called in the DOS32 version by using the DPMI library, but they might work slowly because of the 32bit-16bit-32bit  mode changes the processor will have to perform. 
	- Text mode has a single screen, so you can't use PCOPY or screen switching.
	- Direct access to text screen is not possible in FB.

==Changed due to ambiguity==
	- A scalar variable and an array ( a% and a$(0) ) can no longer share the same name.
	- A variable name can't be a keyword plus a type suffix (%,#,!,#,$) as in DIM FOR%, or a keyword less the suffix (DIM LEFT as INTEGER).
	- SHARED can't be used inside a SUB or FUNCTION as it resulted in shared variables not defined in the main program. A proper DIM SHARED in the main program must be used.
	- COMMON declarations do not depend on the order they are made, variables are matched by name and for that reason named COMMON is no more supported. All COMMON arrays are DYNAMIC in FB.
	- If a single line [[KeyPgIfthen IF]] has an (unnecessary) colon direcly after the THEN, it has to be terminated by an [[KeyPgEndif END IF]] in FB. If that unneeded colon is removed, FB will behave as QB.

==Design differences==
	- Since FB 0.16 all compound statements like IF (multi-line only), DO, WHILE, FOR and SELECT will open an implicit scope block. Because of that, variables declared **explicitly** with DIM or REDIM inside those statements are not seen outside these blocks. The workaround is to declare all variables at the start of each sub/function or main block.
	- The default type of variable is [[KeyPgInteger Integer]], rather than [[KeyPgSingle Single]] as in QuickBASIC. If a QB program does not have a DEF""###"" at the top, DEFSNG A-Z should be added.
	- The $ suffix in built-in functions returning a string (CHR$, MID$...) is now optional (CHR, MID are accepted).
	- All functions must have been declared, even with a CALL in FreeBASIC. With CALL it was possible to invoke prototype-less functions in QuickBASIC.
	- In FreeBASIC all arrays must be explicitly declared. (Interpreted QuickBASIC arrays are automatically created with up to 10 indices.)
	- Strings use a null (char 0) terminator to be compatible with C libraries and the Windows API, fixed-length strings can't contain chr$(0) chars for now.
	- When INKEY$ reads an extended key (Num Pad, Arrows...) it returns a two character string. In FB the first character is CHR(255), while in QB this first char is CHR(0). 
	- With Fixed length strings FreeBASIC gives the real length as [[KeyPgLen LEN]] plus one (null-char), even on [[KeyPgType TYPE]] fields.
	- FIELD statement (for record definition at runtime) has been left aside. The keyword FIELD is used in FB to specify field alignment in [[KeyPgType TYPE]] variables.
	- CLEAR is no longer used to reset all variables and set the stack. Variables must be reset one by one, and stack size can be changed in the compiler command line. The keyword CLEAR is used to do memory fills in FB.
	- The arrays are stored in row-major order in FB, they were stored in column-major order in QB by default. Row major order: data with the same  last index are contiguous. Column-major order: data wih the same first index are contiguous.  For example, if you have DIM A(3,8), in row-major order the elements are stored such that A(3,5) is followed in memory by A(3,6); in column-major order A(3,5) is followed in memory by A(4,5).
	- The [[KeyPgStr STR$()]] command does not retain a space before a positive number like QuickBASIC does. Printing the variables normally will retain the space.
	- Programs don't stop anymore on run-time errors unless -e or -ex option is used in the command line. Using these options allow the use of QB style error handling (ON ERROR, RESUME...).
	- PDS's ON LOCAL ERROR can be used to call error handling code local to the SUB or FUNCTION. In QB all error handling routines had to be in the main part of the module.
	- The [[KeyPgSleep SLEEP]] command takes its argument in milliseconds instead of seconds. ([QB] SLEEP 2 = [FB] SLEEP 2000)
	- Octal numbers are written "&o...", whereas in QB they could be written as "&o..." or "&...".
	- PRINT requires the USING clause, if used, to be the first argument. QB allowed PRINT to have not-to be-formatted arguments before USING. 
	- DATA requires strings to be between double quote signs. In QB double quotes were required only if the string had commas in it. With that change, expressions and constants can also be used in DATA's in FB.
	- Empty DATA elements are not permitted in FB. In QB they are translated to zero if read to a numeric variable or to an empty string if read to a string. In FB the zero or the empty string must be used.
	- In FB FOR loops in subs/functions do not accept arguments received byref as counters. A local variable must be used. 
	- OPEN "COMx ...." to open a serial port must be rewritten as [[KeyPgOpenCom OPEN COM "COMx:....."]] . It Works only in the Win32 version.
	- FB's [[KeyPgLocate LOCATE]] does not allow the fourth and fifth arguments for cursor shape.
	- FB's [[KeyPgScreenCons SCREEN]] does not allow switching the visible or the work-page. Use [[KeyPgScreenset SCREENSET]] instead.
	- FB's [[KeyPgColor COLOR]] does not allow a third argument for border color.
	- FB's [[KeyPgTimer TIMER]] returns the number of seconds since the computer started, while QB's TIMER returns the number of seconds since midnight. (No more wrapping at midnight! :))
	- Since FB 0.16 GOSUB, ON x GOSUB and RETURN to end a GOSUB are no more allowed inside FUNCTIONS and SUBS, they can only be in the main part of the module. This is required by the porting to a gcc frontend. Version 0.15 is the last one that allowed that use of GOSUBS.
	- In QB a chr$(13) inside a string did a CR+LF when PRINT'ed. In FB the CHR(13) prints just at what it is, a LF.
	- EOF can no longer be used to detect an empty comms buffer. Empty buffer should be tested comparing LOC with 0 in FB.
	- OPEN "LPT:" or OPEN "PRN:" must be rewritten as OPEN LPT
	- OPEN "CON:" must be rewritten as OPEN CONS
	-  ""DEF###"" takes only letter ranges in FB, QB allowed single letters. QB's DEFINT a,d should be re-written as [[KeyPgDefint DEFINT]] a-a, d-d
	- BSAVE and BLOAD can be used in FB only to save and retrieve screens or graphic buffers. They will work only if gfxlib is linked, this is,  if a graphics screen mode is requested somewhere in the program. The console can't be saved with BSAVE or retrieved with BLOAD. The other use of BSAVE-BLOAD, saving and loading full arrays  can be achieved easily with GET and PUT.
	- A negative argument in RND will be taken as a zero argument in FB while in QB it caused a reseed. The result of RND will have less resolution in FB Windows (15 bits) than in QB (24 bits). DOS and Linux versions both have a 31 bits resolution and should cause no porting problems.
	- Integer variables do not signal overflow errors in FB, even with the -ex option on. Any QB code relying in catching integer overflow errors will not work in FB. 

==Archaic commands==
	- PC Speaker commands no longer function: Any references to SOUND or PLAY statements will result in an error message. There is a third party library available to emulate this functionality, but it's not included with FreeBASIC.
	- Fake event-driven programming (ON KEY, ON PEN, ON STRIG, ON TIMER) no longer works. They could be emulated by a separate library.
	- MKSMBF$ and all the ""MKxMBF$"" commands supporting the pre-QB4.0 Microsoft propietary floating point format (MBF) are not implemented.
	- The use of parenthesis in the arguments passed to a function to emulate by-value passing is not permitted. The CALL quirk resulting in all arguments being passed by value, no longer works. The proper [[KeyPgByval BYVAL]] and [[KeyPgByref BYREF]] keywords must be used.
	- FILES is not implemented. Instead, PDS 7.1 [[KeyPgDir DIR$]] can be used.
	- IOCTL, ERRDEV and ERRDEV$, low level functions to access hardware are not implemented as they were OS-dependant. 
	- CALL ABSOLUTE to run inline machine code is no longer supported. Instead you can use [[KeyPgAsm ASM]]...END ASM blocks to insert inline assembler commands. Or use the ASM... one line command.

{{fbdoc item="back" value="DocToc|Table of Contents"}}