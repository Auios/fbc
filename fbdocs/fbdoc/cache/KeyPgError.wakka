{{fbdoc item="title" value="ERROR"}}
----
Error handling statement to force an error to be generated.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgSub sub]] **Error** ( //errno// [[KeyPgAs as]] [[KeyPgInteger integer]] )
##
{{fbdoc item="usage"}}##
	**Error** //errno//
##
{{fbdoc item="param"}}
	##//errno//##
		The error number to generate

{{fbdoc item="desc"}}
	Generates a run-time error using the specified ##//errno//##. This can be used to simulate custom error numbers.

{{fbdoc item="ex"}}
	To send an error alert of error 150 (just some arbitrary error code) one would do the following:
%%(qbasic)
error 150
%%
~Freebasic uses these runtime error codes:
~{{table columns="2" cellpadding="1" cells="0;No error;1;Illegal function call;  2;File not found signal;3;File I/O error;4;Out of memory;5;Illegal resume;6;Out of bounds array access;7;Null Pointer Access;8;No privileges;9;interrupted signal;10;illegal instruction signal;11;floating point error signal;12;segmentation violation  signal;13;Termination request signal;14;abnormal termination signal; 15;quit request signal"}}

~No user error code range is defined, so if ERROR is used to set an user-defined error code it is wise to use high values, to avoid collisions in case the list of built-in errors list is enhanced. 


{{fbdoc item="diff"}}
	- Error numbers are not the same as in QB.

{{fbdoc item="see"}}
	- ##[[KeyPgErr Err]]##
	- {{fbdoc item="keyword" value="LangErrorHandling|Error Handling"}}

{{fbdoc item="back" value="CatPgError|ERROR"}}