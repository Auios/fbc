{{fbdoc item="title" value="CLS"}}----
Clears the screen in both text modes and graphics modes

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgSub sub]] **Cls** ( [[KeyPgByval byval]] //mode// [[KeyPgAs as]] [[KeyPgInteger integer]] = 0 )
##
{{fbdoc item="usage"}}##
	**Cls** //mode//
##
{{fbdoc item="param"}}
	##//mode//##
		A optional numeric variable with a value from 0 to 2.

{{fbdoc item="desc"}}
	An optional //mode// parameter may be given,

		If omitted, CLS clears either the text or graphics viewport.  If a graphics viewport has been defined using the ##[[KeyPgViewgraphics View (Graphics)]]## statement, the graphics viewport is cleared.  Otherwise, if a text viewport has been defined, it is cleared.  Otherwise, the entire screen is cleared.

		If 0, clears the entire screen

		If 1, clears the graphics viewport if defined.  Otherwise, clears the entire screen.

		If 2, clears the text viewport


{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/console/cls.bas"}}%%(freebasic)
Color , 1
Cls
Locate 12, 35
Print "Hello Universe!"
%%

Using C's ##memset## instead of CLS might give you a speed boost:

{{fbdoc item="filename" value="examples/manual/gfx/cls-memset.bas"}}%%(freebasic)
#include "crt.bi"
Const x_res = 640, y_res = 480, bpp = 32
Dim scrbuf As Any Ptr, scrsize As Integer
Dim i As Integer, j As Integer

ScreenRes x_res, y_res, bpp
scrbuf = ScreenPtr
scrsize = x_res * y_res * bpp / 8

Do
	ScreenLock
	    memset scrbuf, 0, scrsize
	    Circle (320, 240), i
	ScreenUnlock
   
	If j = 0 Then
	    i = i + 1
	    If i >= 100 Then j = 1
	ElseIf j = 1 Then
	    i = i - 1
	    If i <= 0 Then j = 0
	End If
   
	Sleep 1, 1
Loop While Inkey=""%%

{{fbdoc item="diff"}}
	- None

{{fbdoc item="see"}}
	- ##[[KeyPgColor Color]]##
	- ##[[KeyPgLocate Locate]]##
	- ##[[KeyPgPrint Print]]##
	- ##[[KeyPgViewgraphics View (Graphics)]]##

{{fbdoc item="back" value="CatPgConsole|Console Functions"}}{{fbdoc item="back" value="CatPgGfxScreen|Screen Functions Index"}}