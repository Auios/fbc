{{fbdoc item="title" value="REDIM"}}----
Defines or resizes a dynamic array

{{fbdoc item="syntax"}}##
	**Redim** [ [[KeyPgShared Shared]] ] [ [[KeyPgPreserve Preserve]] ] //symbolname//([//subscript// [, ...]]) As [[DataType datatype]] [, ...]
	**Redim** [ [[KeyPgShared Shared]] ] [ [[KeyPgPreserve Preserve]] ] As [[DataType datatype]] //symbolname//([//subscript// [, ...]]) [, ...]
##
{{fbdoc item="param"}}
	##[[KeyPgShared Shared]]##
		Specifies shared (global) access to the array throughout the module.
	##[[KeyPgPreserve Preserve]]##
		When used with an existing array, the contents of the array will be preserved during the resize. Note that preserve will not work with multi-dimensional arrays.
	##//symbolname//##
		A new or existing variable id.
	##//subscript//##: [ //lowerbound// TO ] //upperbound//
		The lower and upper bound range for a dimension of the array. Lower bound defaults to zero (0) if not specified.
	##[[DataType datatype]]##
		The type of elements contained in the array.

{{fbdoc item="desc"}}
	##**Redim**## can be used to define new dynamic arrays, or resize existing dynamic arrays. ##**Redim**## always produces dynamic arrays, so, unlike ##[[KeyPgDim Dim]]##, dynamic arrays can be defined with constant subscripts.

	When defining a new dynamic array, its elements are default constructed. For simple datatypes like ##[[KeyPgInteger Integer]]## or ##[[KeyPgDouble Double]]##, the elements are initialized to zero (0).

	When a dynamic array is resized without the [[KeyPgPreserve Preserve]] clause, it's elements are destroyed, and new elements are default constructed. The [[KeyPgPreserve Preserve]] clause does not destroy existing elements unless the new size of the dynamic array is smaller that it was previously. When resizing an array larger, the new elements are default constructed at the end of the array.

	**NOTE**: [[KeyPgRedim Redim]]'ing an array inside an object function, when that array contains the parent object of the function, is undefined, and will likely result in horrible crashes.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/array/redim.bas"}}%%(freebasic)
'' Define a dynamic array with 5 elements
''
ReDim array(1 To 5) As Integer

For index As Integer = LBound(array) To UBound(array)
	array(index) = index
Next

'' Redefine a dynamic array with 10 elements
''
ReDim Preserve array(9) As Integer

Print "index", "value"
For index As Integer = LBound(array) To UBound(array)
	Print index, array(index)
Next
%%
	The previous program will produce the following output:

%%index         value
 0             1
 1             2
 2             3
 3             4
 4             5
 5             0
 6             0
 7             0
 8             0
 9             0
%%
{{fbdoc item="diff"}}
	- PRESERVE wasn't supported in QB.

{{fbdoc item="see"}}
	- ##[[KeyPgCommon Common]]##
	- ##[[KeyPgDim Dim]]##
	- ##[[KeyPgErase Erase]]##
	- ##[[KeyPgExtern Extern]]##
	- ##[[KeyPgLbound Lbound]]##
	- ##[[KeyPgRedim Redim]]##
	- ##[[KeyPgPreserve Preserve]]##
	- ##[[KeyPgShared Shared]]##
	- ##[[KeyPgStatic Static]]##
	- ##[[KeyPgUbound Ubound]]##
	- ##[[KeyPgVar Var]]##

{{fbdoc item="back" value="CatPgArray|Array Functions"}}