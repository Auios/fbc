{{fbdoc item="title" value="Temporary Types"}}----
Creates a temporary copy of a user defined type

{{fbdoc item="syntax"}}##
	//result// = **Type**( //initializers//, ... )
		//or//
	//result// = **Type**<//typename//>( //initializers//, ... )
##
{{fbdoc item="param"}}
	##//initializers//##
		Initial values for the type
	##//typename//##
		The name of the ##[[KeyPgType Type]]## or ##[[KeyPgUnion Union]]##

{{fbdoc item="ret"}}
	A temporary copy of the type.

{{fbdoc item="desc"}}
	Used to create an anonymous and temporary type.  If ##//typename//## is not explicitly given, it will be inferred from its usage.  Usage of the temporary copy may include assigning it to a variable, passing it as a parameter to a procedure, or returning it as a value from a procedure.

	The ##[[KeyPgConstructor Constructor]]## for the type, if there is one, will be called when the temporary copy is created.  And the ##[[KeyPgDestructor Destructor]]## for the type, if there is one, will be called immediately after its use.

	It can also be used as an even shorter shortcut than ##[[KeyPgWith With]]## (see below) if you are changing all the records.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/udt/temp-type.bas"}}%%(freebasic)
Type Example
	As Integer field1
	As Integer field2
End Type

Dim ex As Example

'' First method of filling the type
ex.field1 = 1
ex.field2 = 2

'' Second method
With ex
	.field1 = 1
	.field2 = 2
End With

'' Third method, using temporary types
ex = Type( 1, 2 )
%%

{{fbdoc item="diff"}}
	- New to FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgType Type...End Type]]##
	- ##[[KeyPgTypeAlias Type (Alias)]]##

{{fbdoc item="back" value="CatPgUserDefTypes|User Defined Types"}}