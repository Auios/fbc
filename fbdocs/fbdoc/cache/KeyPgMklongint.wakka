{{fbdoc item="title" value="MKLONGINT$"}}----
Does a binary copy from a ##[[KeyPgLongint longint]]## variable to a ##[[KeyPgStringtype string]]##, setting its length to 8 bytes.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Mklongint** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgLongint longint]] ) [[KeyPgAs as]] [[KeyPgStringtype string]]
##
{{fbdoc item="usage"}}##
	//result// = **Mklongint**( //number// )
##
{{fbdoc item="param"}}
	##//number//##
		A ##[[KeyPgLongint longint]]## variable to binary copy to a ##[[KeyPgStringtype string]]##.

{{fbdoc item="ret"}}
	Returns a ##[[KeyPgStringtype string]]## with a binary copy of the ##[[KeyPgLongint longint]]##.

{{fbdoc item="desc"}}
	Does a binary copy  from a ##[[KeyPgLongint Longint]]## variable to a string, setting its length to 8 bytes. The resulting string can be read back to a longint by ##[[KeyPgCvlongint Cvlonging]]##

	This function is useful to write numeric values to buffers without using a ##[[KeyPgType Type]]## definition.

{{fbdoc item="ex"}}
%%(qbasic)dim a as longint, b as string
a = 4534
b = mklongint$(a)
print a, cvlongint(b)
sleep
%%

{{fbdoc item="diff"}}
	- New to Freebasic.

{{fbdoc item="see"}}
	- ##[[KeyPgCvlongint Cvlongint]]##

{{fbdoc item="back" value="CatPgString|String Functions"}}