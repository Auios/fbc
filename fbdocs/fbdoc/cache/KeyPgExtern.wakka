{{fbdoc item="title" value="EXTERN"}}----
Declares a symbol defined in another module.

{{fbdoc item="syntax"}}##
	**Extern** [ [[KeyPgImport import]] ] //symbolname//[( //subscripts//)] [ [[KeyPgAlias alias]] "//aliasname//" ] [ [[KeyPgAs as]] [[DataType DataType]] ] [, ...]
##
{{fbdoc item="desc"}}
	Declares ##//symbolname//## as ##**Extern**##, without allocating any space for it (different from ##[[KeyPgCommon Common]]##).

	If the ##//aliasname//## is given, it will be used to reference the variable or array when emitting the code. 

	If ##[[KeyPgImport import]]## is used, the symbol will be added to the dynamic library import list so its address can be fixed at run-time.

{{fbdoc item="ex"}}
%%(qbasic)
'' module1.bas
EXTERN Foo ALIAS "foo" As Integer

sub SetFoo
	foo = 1234
end sub
%%

%%(qbasic)
'' module2.bas
declare sub SetFoo
EXTERN Foo ALIAS "foo" As Integer
DIM foo As Integer = 0

SetFoo
Print Foo
%%
Output:
%%
 1234
%%
{{fbdoc item="diff"}}
	- New to FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgCommon Common]]##
	- ##[[KeyPgDim Dim]]##
	- ##[[KeyPgExternCpp Extern...End Extern]]##
	- ##[[KeyPgRedim Redim]]##
	- ##[[KeyPgPreserve Preserve]]##
	- ##[[KeyPgShared Shared]]##
	- ##[[KeyPgStatic Static]]##
	- ##[[KeyPgVar Var]]##

{{fbdoc item="back" value="CatPgModularizing|Modularizing"}}