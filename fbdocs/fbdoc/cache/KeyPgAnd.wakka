{{fbdoc item="title" value="AND"}}
----
Operator that finds the bitwise ##**And**## (conjunction) of two integers.

{{fbdoc item="syntax"}}##
	//number1// **And** //number2//
##
{{fbdoc item="usage"}}##
	//result// = //number1// **And** //number2//
##
{{fbdoc item="desc"}}
	##**And**##, at its most primitive level, is a boolean operation, a logic function that takes in two bits and outputs a resulting bit.

	No short-circuiting is performed - both expressions are always evaluated.
	
	If given two bits, this operator returns true if both bits are true, and false for any other combination.  The truth table below demonstrates all combinations of a boolean and operation:
##%%(qbasic)
Bit1     Bit2    Result
 0         0        0
 1         0        0
 0         1        0
 1         1        1
%%##
	This holds true for conditional expressions in FreeBasic.  When using ##**And**## encased in an ##[[KeyPgIf If]]## block, ##[[KeyPgWhile While]]## loop, or ##[[KeyPgDo Do]]## loop, the output will behave quite literally:
##%%(qbasic)If condition1 And condition2 Then expression1%%##
	Is translated as:
##%%(qbasic)If condition1 is true, and condition2 is true, then perform expression1%%##
	When given two expressions, numbers, or variables that return a number that is more than a single bit, ##**And**## is performed "bitwise". A bitwise operation compares each bit of one number, with each bit of another number, performing a logic operation for every bit.
	The boolean math expression below describes this:
##%%(qbasic)
00001111 And
00011110 
--------  equals
00001110
%%##
	Notice how the result of the operation reflects an and operation performed on each bit of the top operand, with each corresponding bit of the bottom operand.  The same logic is also used when working with conditions.

{{fbdoc item="ex"}}
%%(qbasic)
' Using the AND operator on two numeric values
DIM AS UBYTE numeric_value1, numeric_value2
numeric_value1 = 15 '00001111
numeric_value2 = 30 '00011110

'Result =  14  =     00001110
PRINT numeric_value1 AND numeric_value2
SLEEP
%%

%%(qbasic)
' Using the AND operator on two conditional expressions
Dim As UByte numeric_value1, numeric_value2
numeric_value1 = 15
numeric_value2 = 25

IF numeric_value1 > 10 AND numeric_value1 < 20 Then Print "Numeric_Value1 is between 10 and 20"
IF numeric_value2 > 10 AND numeric_value2 < 20 Then Print "Numeric_Value2 is between 10 and 20"
SLEEP

' This will output "Numeric_Value1 is between 10 and 20" because
' both conditions of the IF statement is true
' It will not output the result of the second IF statement because the first
' condition is true and the second is false.
%%

{{fbdoc item="diff"}}
	- None

{{fbdoc item="see"}}
	- [[TblTruth Operator Truth Tables]]
	- ##[[KeyPgOr Or]]##
	- ##[[KeyPgXor Xor]]##
	- ##[[KeyPgNot Not]]##
	- ##[[KeyPgEqv Eqv]]##
	- ##[[KeyPgImp Imp]]##

{{fbdoc item="back" value="CatPgOperators|Operators"}} {{fbdoc item="back" value="CatPgFullIndex|Alphabetic list of keywords"}}