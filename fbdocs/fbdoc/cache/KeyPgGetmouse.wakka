{{fbdoc item="title" value="GETMOUSE"}}----
Retrieves the status of the mouse pointing device

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Getmouse** ( [[KeyPgByref byref]] //x// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByref byref]] //y// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByref byref]] //wheel// [[KeyPgAs as]] [[KeyPgInteger integer]] = 0, [[KeyPgByref byref]] //buttons// [[KeyPgAs as]] [[KeyPgInteger integer]] = 0 ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//result// = **Getmouse** (//x//, //y// [, [ //wheel// ] [, [ //buttons// ]]])
##
{{fbdoc item="param"}}
	##//x//##
		x coordinate value
	##//y//##
		y coordinate value
	##//wheel//##
		scroll wheel value
	##//buttons//##
		button status

{{fbdoc item="ret"}}
	0 on success or 1 on failure.

{{fbdoc item="desc"}}
	##**Getmouse**## retrieves the mouse position and buttons status; information is returned in the variables passed to this function by reference. If a mouse is not available, all variables will contain the -1 value. 
	
	If in console mode, the ##//x//## and ##//y//## coordinates are the character cell coordinates the mouse is currently on; the upper left corner of the screen is at coordinates 0, 0. If the mouse moves out of the console window, ##**Getmouse**## returns the last coordinate on the window that the mouse was on. 
	
	If in gfx mode, ##//x//## and ##//y//## will always be returned in pixel coordinates still relative to the upper left corner of the screen, which is at 0,0 in this case; custom coordinates system set via ##[[KeyPgViewgraphics View]]## or ##[[KeyPgWindow Window]]## do not affect the coordinates returned by ##**Getmouse**##. If the mouse runs off the window, all values are set to -1.
	
	##//Wheel//## is the mouse wheel counter; rotating the wheel away from you makes the count to increase, rotating towards you makes it to decrease. At program startup or when a new gfx mode is set via ##[[KeyPgScreengraphics Screen]]##, wheel position is reset to 0. FreeBASIC may not always support mouse wheels, in which case 0 is always returned.
	
	##//Buttons//## stores the buttons status as a bitmask: bit 0 is set if left mouse button is down; bit 1 is set if right mouse button is down; bit 2 is set if middle mouse button is down.

{{fbdoc item="ex"}}
%%(qbasic)

' Set video mode and enter loop
DIM x AS INTEGER, y AS INTEGER, buttons AS INTEGER
DIM res AS INTEGER
SCREEN 13
DO
	' Get mouse x, y and buttons. Discard wheel position.
	res = GETMOUSE (x, y, , buttons)
	    'buttons
	LOCATE 1, 1
	IF res <> 0 THEN
		PRINT "Mouse not available or not on window"
	ELSE
		PRINT USING "Mouse position: ###:###  Buttons: "; x; y;
		IF buttons AND 1 THEN PRINT "L";
		IF buttons AND 2 THEN PRINT "R";
		IF buttons AND 4 THEN PRINT "M";
		PRINT "   "
	END IF
LOOP WHILE INKEY = ""
END
%%

{{fbdoc item="diff"}}
	- New to FreeBasic

{{fbdoc item="see"}}
	- ##[[KeyPgScreengraphics Screen (Graphics)]]##
	- ##[[KeyPgSetmouse Setmouse]]##
	- ##[[KeyPgMultikey Multikey]]##
	- ##[[KeyPgGetjoystick Getjoystick]]##

{{fbdoc item="back" value="CatPgGfxInput|User Input Functions"}}