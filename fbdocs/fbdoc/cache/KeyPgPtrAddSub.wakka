{{fbdoc item="title" value="Pointer Arithmetics"}}----
Performs mathematical operations on pointers

{{fbdoc item="syntax"}}##
	//pointer// + //expression//
	//pointer// - //expression//
	//pointer// - //pointer//
##
{{fbdoc item="param"}}
	##//pointer//##
		A pointer.
	##//expression//##
		A distance expressed as an integer expression.

{{fbdoc item="desc"}}
	The first form evaluates to an address that is ##(//expression// * sizeof(pointed to type))## bytes from ##//pointer//##. The seecond form is virtually the same, although the direction is reversed - remember that ##x - y = x + -y##.

	The third form evaluates to the distance from two addresses expressed as an integer. If ##a## and ##b## are pointers of the same type, then ##a = b + (a - b)##.

	Is up to the user to ensure the resulting pointer points to meaningful data.

{{fbdoc item="ex"}}
%%(qbasic)dim array(4) as integer

'' point to the first element
dim p as integer ptr = @array(0)

'' assign some values to the elements in the array
for index as integer = 0 to 4
	*(p + index) = index
next

'' output elements of the array
for index as integer = 0 to 4
	print *p ;
	'' combination assignment operators can be used too,
	'' same as p = p + 1
	p += 1
next
%%
	Will give the output,

%%0 1 2 3 4
%%

{{fbdoc item="diff"}}
	- New to FreeBasic

{{fbdoc item="see"}}
	- [[KeyPgAt (@) Address of]]
	- [[KeyPgValOf (*) Value of]]
	- [[CatPgOpPoint Pointer Operators]]
	
{{fbdoc item="back" value="CatPgOperators|Operators"}}