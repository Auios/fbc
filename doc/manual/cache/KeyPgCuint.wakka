{{fbdoc item="title" value="CUINT"}}----
Converts numeric or string expression to an unsigned integer (##[[KeyPgUinteger Uinteger]]##)

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Cuint** ( [[KeyPgByval byval]] //expression// [[KeyPgAs as]] [[DataType datatype]] ) [[KeyPgAs as]] [[KeyPgUinteger uinteger]]

	[[KeyPgType Type]] //typename//
		[[KeyPgDeclare declare]] [[KeyPgOperator operator]] [[KeyPgCast cast]] ( ) [[KeyPgAs as]] [[KeyPgUinteger uinteger]]
	End Type
##
{{fbdoc item="usage"}}##
	//result// = **Cuint**( //numeric expression// )
	//result// = **Cuint**( //string expression// )
	//result// = **Cuint**( //user defined type// )
##
{{fbdoc item="param"}}
	##//expression//##
		a numeric, string, or pointer expression to cast to a ##[[KeyPgUinteger Uinteger]]## value
	##//datatype//##
		any numeric, string, or pointer data type
	##//typename//##
		a user defined type

{{fbdoc item="ret"}}
	A ##[[KeyPgUinteger Uinteger]]## value.

{{fbdoc item="desc"}}
	The ##**Cuint**## function rounds off the decimal part and returns a 32-bit ##[[KeyPgUinteger Uinteger]]## value.  The function does not check for an overflow, and results are undefined for values which are less than ##0## or larger than ##4## ##294## ##967## ##296##.

	The name can be explained as 'Convert to Unsigned INTeger'.

	If the argument is a string expression, it is converted to numeric by using ##[[KeyPgValuint Valuint]]##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/casting/cuint.bas"}}%%(freebasic)
' Using the CUINT function to convert a numeric value

'Create an UNSIGNED INTEGER variable
DIM numeric_value AS UINTEGER

'Convert a numeric value
numeric_value = CUINT(300.23)

'Print the result = 300
PRINT numeric_value
SLEEP
%%

{{fbdoc item="lang"}}
	- Not available in the //[[CompilerOptlang -lang qb]]// dialect unless referenced with the alias ##**""__Cuint""**##.

{{fbdoc item="diff"}}
	- New to ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgCbyte Cbyte]]##
	- ##[[KeyPgCubyte Cubyte]]##
	- ##[[KeyPgCshort Cshort]]##
	- ##[[KeyPgCushort Cushort]]##
	- ##[[KeyPgCint Cint]]##
	- ##[[KeyPgClng Clng]]##
	- ##[[KeyPgCulng Culng]]##
	- ##[[KeyPgClngint Clngint]]##
	- ##[[KeyPgCulngint Culngint]]##
	- ##[[KeyPgCsng Csng]]##
	- ##[[KeyPgCdbl Cdbl]]##

{{fbdoc item="back" value="CatPgCasting|Converting Data Types"}}