{{fbdoc item="title" value="NAKED"}}----
Write functions without prolog/epilog code

{{fbdoc item="syntax"}}##
	[[KeyPgSub Sub]] //identifier// **Naked** [//calling_convention//] ( //param_list// )
		//asm_statements//
	[[KeyPgEndblock End]] [[KeyPgSub Sub]]
	[[KeyPgFunction Function]] //identifier// **Naked** [//calling_convention//] ( //param_list// ) [[KeyPgAs As]] //data_type//
		//asm_statements//
	[[KeyPgEndblock End]] [[KeyPgFunction Function]]
##
{{fbdoc item="param"}}
	##//identifier//## - name of the procedure.
	##//calling_convention//## - calling convention of the procedure - can be ##[[KeyPgCdecl CDecl]]##, ##[[KeyPgPascal Pascal]]##, or ##[[KeyPgStdcall StdCall]]##
	##//asm_statements//## - the code in the procedure body.  The code for handling parameters and returning values must all be done manually.  Note that the methods for doing these can change, depending on the calling convention.
	##//param_list//## - parameters to be passed to the procedure.
	##//data_type//## - the [[DataType data type]] of the function.

{{fbdoc item="desc"}}
	##**Naked**## allows the programmer to write procedures without the compiler generating any prolog/epilog code.  This is useful when writing small, fast functions in ##[[KeyPgAsm Asm]]## without any unnecessary overhead.
	
	 **Warning:** Before fbc version 0.24, ##**Naked**## is not compatible with use of the compiler option //[[CompilerOptexx -exx]]// or //[[CompilerOptprofile -profile]]// (because of program stack pollution by code that is only meant for normal functions).

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/procs/naked.bas"}}%%(freebasic)
'' Naked cdecl function
function add naked cdecl _
	( _
		byval a as integer, _
		byval b as integer _
	) as integer
	
	asm
		mov eax, dword ptr [esp+4] '' a
		add eax, dword ptr [esp+8] '' + b
		ret                        '' return result in eax
	end asm
	
end function

print add( 1, 5 )%%

{{fbdoc item="target"}}
	- The default calling convention can change depending on the platform used.  Additionally, ##[[KeyPgStdcall StdCall]]## does not behave the same on all platforms - on Linux, it behaves like ##[[KeyPgCdecl Cdecl]]##.  It may be necessary to check the [[CatPgDddefines Intrinsic Defines]] (such as ##[[KeyPgDdfbwin32 __FB_WIN32__]]##), and write different code depending on them.

{{fbdoc item="diff"}}
	- New to ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgAsm Asm]]##
	- ##[[KeyPgFunction Function]]##
	- ##[[KeyPgSub Sub]]##
	- ##[[KeyPgCdecl CDecl]]##
	- ##[[KeyPgPascal Pascal]]##
	- ##[[KeyPgStdcall StdCall]]##

{{fbdoc item="back" value="CatPgProcedures|Procedures"}}